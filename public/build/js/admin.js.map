{"version":3,"sources":["admin.js"],"names":["iniciarApp","buscarPorFecha","cambiarEstadoCita","manejarTabs","gestionarServicios","gestionarUsuarios","fechaInput","document","querySelector","addEventListener","e","fechaSeleccionada","target","value","window","location","btnLimpiar","preventDefault","querySelectorAll","forEach","estado","citaId","dataset","nuevoEstado","estadoBadge","closest","Swal","fire","title","text","allowOutsideClick","showConfirmButton","willOpen","showLoading","datos","FormData","append","fetch","method","body","then","respuesta","json","resultado","tipo","clases","pendiente","completada","cancelada","className","classList","add","split","textContent","charAt","toUpperCase","slice","icon","timer","error","tabs","contents","tab","t","remove","content","this","tabId","contenidoActivo","btnNuevoServicio","mostrarFormularioServicio","btn","editarServicio","id","confirmarEliminarServicio","servicio","html","nombre_servicio","precio","tiempo_estimado","showCancelButton","confirmButtonText","cancelButtonText","preConfirm","form","getElementById","checkValidity","reportValidity","guardarServicio","async","formData","url","response","mensaje","setTimeout","reload","console","confirmButtonColor","cancelButtonColor","result","isConfirmed","eliminarServicio","usuario","nombreCompleto","nombre","apellido","trim","fechaRegistro","fecha_creacion","Date","toLocaleDateString","fechaActualizacion","ultima_actualizacion","email","telefono","confirmado","admin","customClass","confirmButton","mostrarFormularioUsuario","eliminarUsuario","actualizarUsuario"],"mappings":"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","file":"admin.js","sourcesContent":["document.addEventListener('DOMContentLoaded', function() {\r\n    iniciarApp();\r\n});\r\n\r\nfunction iniciarApp() {\r\n    buscarPorFecha();\r\n    cambiarEstadoCita();\r\n    manejarTabs();\r\n    gestionarServicios();\r\n    gestionarUsuarios();\r\n}\r\n\r\nfunction buscarPorFecha() {\r\n    const fechaInput = document.querySelector('#fecha');\r\n    if(fechaInput) {\r\n        fechaInput.addEventListener('input', function(e) {\r\n            const fechaSeleccionada = e.target.value;\r\n            window.location = `?fecha=${fechaSeleccionada}`;\r\n        });\r\n\r\n        // Agregar evento al botón limpiar\r\n        const btnLimpiar = document.querySelector('a[href=\"/admin\"]');\r\n        if(btnLimpiar) {\r\n            btnLimpiar.addEventListener('click', function(e) {\r\n                e.preventDefault();\r\n                // Limpiar el input de fecha\r\n                fechaInput.value = '';\r\n                // Redirigir a admin sin parámetros\r\n                window.location = '/admin';\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nfunction cambiarEstadoCita() {\r\n    const estados = document.querySelectorAll('.estado-cita');\r\n    estados.forEach(estado => {\r\n        estado.addEventListener('change', function(e) {\r\n            const citaId = e.target.dataset.citaId;\r\n            const nuevoEstado = e.target.value;\r\n            const estadoBadge = e.target.closest('.bg-white').querySelector('.estado-badge');\r\n\r\n            // Mostrar loading\r\n            Swal.fire({\r\n                title: 'Actualizando...',\r\n                text: 'Por favor espere',\r\n                allowOutsideClick: false,\r\n                showConfirmButton: false,\r\n                willOpen: () => {\r\n                    Swal.showLoading();\r\n                }\r\n            });\r\n\r\n            const datos = new FormData();\r\n            datos.append('id', citaId);\r\n            datos.append('estado', nuevoEstado);\r\n\r\n            try {\r\n                fetch('/api/citas/estado', {\r\n                    method: 'POST',\r\n                    body: datos\r\n                })\r\n                .then(respuesta => respuesta.json())\r\n                .then(resultado => {\r\n                    if(resultado.tipo === 'exito') {\r\n                        // Actualizar el badge de estado\r\n                        const clases = {\r\n                            'pendiente': 'bg-yellow-100 text-yellow-800',\r\n                            'completada': 'bg-green-100 text-green-800',\r\n                            'cancelada': 'bg-red-100 text-red-800'\r\n                        };\r\n                        \r\n                        // Remover clases anteriores\r\n                        estadoBadge.className = 'estado-badge px-3 py-1 rounded-full text-sm font-medium';\r\n                        // Agregar nuevas clases\r\n                        estadoBadge.classList.add(...clases[nuevoEstado].split(' '));\r\n                        estadoBadge.textContent = nuevoEstado.charAt(0).toUpperCase() + nuevoEstado.slice(1);\r\n\r\n                        Swal.fire({\r\n                            icon: 'success',\r\n                            title: 'Estado Actualizado',\r\n                            text: 'El estado de la cita se actualizó correctamente',\r\n                            showConfirmButton: false,\r\n                            timer: 1500\r\n                        });\r\n                    }\r\n                });\r\n            } catch (error) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: 'Hubo un error al actualizar el estado'\r\n                });\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction manejarTabs() {\r\n    const tabs = document.querySelectorAll('.tab-btn');\r\n    const contents = document.querySelectorAll('.tab-content');\r\n\r\n    tabs.forEach(tab => {\r\n        tab.addEventListener('click', function() {\r\n            // Remover clases activas de todas las tabs\r\n            tabs.forEach(t => {\r\n                t.classList.remove('border-blue-500', 'text-blue-600');\r\n                t.classList.add('border-transparent', 'text-gray-500');\r\n            });\r\n\r\n            // Ocultar todos los contenidos\r\n            contents.forEach(content => {\r\n                content.classList.add('hidden');\r\n            });\r\n\r\n            // Activar la tab seleccionada\r\n            this.classList.remove('border-transparent', 'text-gray-500');\r\n            this.classList.add('border-blue-500', 'text-blue-600');\r\n            \r\n            // Mostrar el contenido correspondiente\r\n            const tabId = this.dataset.tab;\r\n            const contenidoActivo = document.querySelector(`#${tabId}-tab`);\r\n            if(contenidoActivo) {\r\n                contenidoActivo.classList.remove('hidden');\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction gestionarServicios() {\r\n    // Nuevo servicio\r\n    const btnNuevoServicio = document.querySelector('#nuevo-servicio');\r\n    if(btnNuevoServicio) {\r\n        btnNuevoServicio.addEventListener('click', mostrarFormularioServicio);\r\n    }\r\n\r\n    // Editar servicio\r\n    const btnsEditar = document.querySelectorAll('.editar-servicio');\r\n    btnsEditar.forEach(btn => {\r\n        btn.addEventListener('click', function() {\r\n            const id = this.dataset.id;\r\n            editarServicio(id);\r\n        });\r\n    });\r\n\r\n    // Eliminar servicio\r\n    const btnsEliminar = document.querySelectorAll('.eliminar-servicio');\r\n    btnsEliminar.forEach(btn => {\r\n        btn.addEventListener('click', function() {\r\n            const id = this.dataset.id;\r\n            confirmarEliminarServicio(id);\r\n        });\r\n    });\r\n}\r\n\r\nfunction mostrarFormularioServicio(servicio = {}) {\r\n    Swal.fire({\r\n        title: servicio.id ? 'Editar Servicio' : 'Nuevo Servicio',\r\n        html: `\r\n            <form id=\"formulario-servicio\" class=\"space-y-4\">\r\n                <input type=\"hidden\" name=\"id\" value=\"${servicio.id || ''}\">\r\n                <div>\r\n                    <label class=\"block text-sm font-medium text-gray-700\">Nombre del Servicio</label>\r\n                    <input type=\"text\" name=\"nombre_servicio\" \r\n                           class=\"mt-1 block w-full rounded-md border-gray-300\" \r\n                           value=\"${servicio.nombre_servicio || ''}\" \r\n                           required \r\n                           minlength=\"3\"\r\n                           \r\n                           title=\"Solo se permiten letras y espacios\">\r\n                </div>\r\n                <div>\r\n                    <label class=\"block text-sm font-medium text-gray-700\">Precio</label>\r\n                    <input type=\"number\" name=\"precio\" \r\n                           class=\"mt-1 block w-full rounded-md border-gray-300\" \r\n                           value=\"${servicio.precio || ''}\" \r\n                           required \r\n                           min=\"3000\"\r\n                           max=\"100000\"\r\n                           step=\"1\">\r\n                </div>\r\n                <div>\r\n                    <label class=\"block text-sm font-medium text-gray-700\">Tiempo Estimado (minutos)</label>\r\n                    <input type=\"number\" name=\"tiempo_estimado\" \r\n                           class=\"mt-1 block w-full rounded-md border-gray-300\" \r\n                           value=\"${servicio.tiempo_estimado || ''}\" \r\n                           required \r\n                           min=\"1\"\r\n                           step=\"1\">\r\n                </div>\r\n            </form>\r\n        `,\r\n        showCancelButton: true,\r\n        confirmButtonText: servicio.id ? 'Actualizar' : 'Crear',\r\n        cancelButtonText: 'Cancelar',\r\n        preConfirm: () => {\r\n            const form = document.getElementById('formulario-servicio');\r\n            if(!form.checkValidity()) {\r\n                form.reportValidity();\r\n                return false;\r\n            }\r\n            const formData = new FormData(form);\r\n            return guardarServicio(formData, servicio.id);\r\n        }\r\n    });\r\n}\r\n\r\nasync function guardarServicio(formData, id) {\r\n    try {\r\n        const url = id ? '/api/servicios/actualizar' : '/api/servicios/crear';\r\n        const response = await fetch(url, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n        const resultado = await response.json();\r\n\r\n        if(resultado.tipo === 'exito') {\r\n            Swal.fire('¡Éxito!', resultado.mensaje, 'success');\r\n            setTimeout(() => {\r\n                window.location.reload();\r\n            }, 1500);\r\n        } else {\r\n            Swal.fire('Error', resultado.mensaje, 'error');\r\n        }\r\n    } catch (error) {\r\n        console.error(error);\r\n        Swal.fire('Error', 'Hubo un error al procesar la solicitud', 'error');\r\n    }\r\n}\r\n\r\nasync function editarServicio(id) {\r\n    try {\r\n        const response = await fetch(`/api/servicios/${id}`);\r\n        const servicio = await response.json();\r\n        mostrarFormularioServicio(servicio);\r\n    } catch (error) {\r\n        console.error(error);\r\n        Swal.fire('Error', 'No se pudo cargar el servicio', 'error');\r\n    }\r\n}\r\n\r\nfunction confirmarEliminarServicio(id) {\r\n    Swal.fire({\r\n        title: '¿Estás seguro?',\r\n        text: \"Esta acción no se puede revertir\",\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Sí, eliminar',\r\n        cancelButtonText: 'Cancelar'\r\n    }).then((result) => {\r\n        if (result.isConfirmed) {\r\n            eliminarServicio(id);\r\n        }\r\n    });\r\n}\r\n\r\nasync function eliminarServicio(id) {\r\n    try {\r\n        const formData = new FormData();\r\n        formData.append('id', id);\r\n\r\n        const response = await fetch('/api/servicios/eliminar', {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n        const resultado = await response.json();\r\n\r\n        if(resultado.tipo === 'exito') {\r\n            Swal.fire('¡Eliminado!', resultado.mensaje, 'success');\r\n            setTimeout(() => {\r\n                window.location.reload();\r\n            }, 1500);\r\n        } else {\r\n            Swal.fire('Error', resultado.mensaje, 'error');\r\n        }\r\n    } catch (error) {\r\n        console.error(error);\r\n        Swal.fire('Error', 'Hubo un error al eliminar el servicio', 'error');\r\n    }\r\n}\r\n\r\nfunction gestionarUsuarios() {\r\n    // Botones Ver Detalles\r\n    const btnsVerDetalles = document.querySelectorAll('.ver-usuario');\r\n    btnsVerDetalles.forEach(btn => {\r\n        btn.addEventListener('click', async function() {\r\n            const id = this.dataset.id;\r\n            try {\r\n                const response = await fetch(`/api/usuarios?id=${id}`);\r\n                const usuario = await response.json();\r\n                \r\n                if(usuario) {\r\n                    // Validar que los datos existan antes de mostrarlos\r\n                    const nombreCompleto = `${usuario.nombre || ''} ${usuario.apellido || ''}`.trim();\r\n                    const fechaRegistro = usuario.fecha_creacion ? new Date(usuario.fecha_creacion).toLocaleDateString() : 'No disponible';\r\n                    const fechaActualizacion = usuario.ultima_actualizacion ? new Date(usuario.ultima_actualizacion).toLocaleDateString() : 'No disponible';\r\n\r\n                    Swal.fire({\r\n                        title: 'Detalles del Usuario',\r\n                        html: `\r\n                            <div class=\"text-left\">\r\n                                <p class=\"mb-2\"><strong>Nombre:</strong> ${nombreCompleto || 'No disponible'}</p>\r\n                                <p class=\"mb-2\"><strong>Email:</strong> ${usuario.email || 'No disponible'}</p>\r\n                                <p class=\"mb-2\"><strong>Teléfono:</strong> ${usuario.telefono || 'No disponible'}</p>\r\n                                <p class=\"mb-2\"><strong>Estado:</strong> ${usuario.confirmado ? 'Confirmado' : 'Pendiente'}</p>\r\n                                <p class=\"mb-2\"><strong>Rol:</strong> ${usuario.admin ? 'Administrador' : 'Cliente'}</p>\r\n                                <p class=\"mb-2\"><strong>Fecha de registro:</strong> ${fechaRegistro}</p>\r\n                                <p class=\"mb-2\"><strong>Última actualización:</strong> ${fechaActualizacion}</p>\r\n                            </div>\r\n                        `,\r\n                        confirmButtonText: 'Cerrar',\r\n                        customClass: {\r\n                            confirmButton: 'bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition-colors'\r\n                        }\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                console.error('Error:', error);\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: 'No se pudo cargar la información del usuario'\r\n                });\r\n            }\r\n        });\r\n    });\r\n\r\n    // Editar usuario\r\n    const btnsEditar = document.querySelectorAll('.editar-usuario');\r\n    btnsEditar.forEach(btn => {\r\n        btn.addEventListener('click', async function() {\r\n            const id = this.dataset.id;\r\n            try {\r\n                const response = await fetch(`/api/usuarios?id=${id}`);\r\n                const usuario = await response.json();\r\n                \r\n                if(usuario) {\r\n                    mostrarFormularioUsuario(usuario);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error:', error);\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: 'No se pudo cargar la información del usuario'\r\n                });\r\n            }\r\n        });\r\n    });\r\n\r\n    // Eliminar usuario\r\n    const btnsEliminar = document.querySelectorAll('.eliminar-usuario');\r\n    btnsEliminar.forEach(btn => {\r\n        btn.addEventListener('click', function() {\r\n            const id = this.dataset.id;\r\n            \r\n            Swal.fire({\r\n                title: '¿Estás seguro?',\r\n                text: \"Esta acción eliminará al usuario y todas sus citas. No podrás revertir esto.\",\r\n                icon: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#d33',\r\n                cancelButtonColor: '#3085d6',\r\n                confirmButtonText: 'Sí, eliminar',\r\n                cancelButtonText: 'Cancelar'\r\n            }).then((result) => {\r\n                if (result.isConfirmed) {\r\n                    eliminarUsuario(id);\r\n                }\r\n            });\r\n        });\r\n    });\r\n}\r\n\r\nfunction mostrarFormularioUsuario(usuario) {\r\n    Swal.fire({\r\n        title: 'Editar Usuario',\r\n        html: `\r\n            <form id=\"formulario-usuario\" class=\"space-y-4\">\r\n                <input type=\"hidden\" name=\"id\" value=\"${usuario.id}\">\r\n                <div>\r\n                    <label class=\"block text-sm font-medium text-gray-700\">Nombre</label>\r\n                    <input type=\"text\" name=\"nombre\" \r\n                           class=\"mt-1 block w-full rounded-md border-gray-300\" \r\n                           value=\"${usuario.nombre || ''}\" \r\n                           required>\r\n                </div>\r\n                <div>\r\n                    <label class=\"block text-sm font-medium text-gray-700\">Apellido</label>\r\n                    <input type=\"text\" name=\"apellido\" \r\n                           class=\"mt-1 block w-full rounded-md border-gray-300\" \r\n                           value=\"${usuario.apellido || ''}\" \r\n                           required>\r\n                </div>\r\n                <div>\r\n                    <label class=\"block text-sm font-medium text-gray-700\">Email</label>\r\n                    <input type=\"email\" name=\"email\" \r\n                           class=\"mt-1 block w-full rounded-md border-gray-300\" \r\n                           value=\"${usuario.email || ''}\" \r\n                           required>\r\n                </div>\r\n                <div>\r\n                    <label class=\"block text-sm font-medium text-gray-700\">Teléfono</label>\r\n                    <input type=\"tel\" name=\"telefono\" \r\n                           class=\"mt-1 block w-full rounded-md border-gray-300\" \r\n                           value=\"${usuario.telefono || ''}\" \r\n                           required \r\n                           pattern=\"[0-9]{9}\">\r\n                </div>\r\n                <div>\r\n                    <label class=\"block text-sm font-medium text-gray-700\">Estado de la cuenta</label>\r\n                    <select name=\"confirmado\" \r\n                            class=\"mt-1 block w-full rounded-md border-gray-300\">\r\n                        <option value=\"0\" ${!usuario.confirmado ? 'selected' : ''}>Pendiente</option>\r\n                        <option value=\"1\" ${usuario.confirmado ? 'selected' : ''}>Confirmada</option>\r\n                    </select>\r\n                </div>\r\n            </form>\r\n        `,\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Actualizar',\r\n        cancelButtonText: 'Cancelar',\r\n        preConfirm: () => {\r\n            const form = document.getElementById('formulario-usuario');\r\n            if(!form.checkValidity()) {\r\n                form.reportValidity();\r\n                return false;\r\n            }\r\n            const formData = new FormData(form);\r\n            return actualizarUsuario(formData);\r\n        }\r\n    });\r\n}\r\n\r\nasync function actualizarUsuario(formData) {\r\n    try {\r\n        const response = await fetch('/api/usuarios/actualizar', {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n        const resultado = await response.json();\r\n\r\n        if(resultado.tipo === 'exito') {\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: '¡Usuario actualizado!',\r\n                text: resultado.mensaje,\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n            });\r\n\r\n            setTimeout(() => {\r\n                window.location.reload();\r\n            }, 1500);\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: resultado.mensaje\r\n            });\r\n        }\r\n    } catch (error) {\r\n        console.error(error);\r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: 'Hubo un error al actualizar el usuario'\r\n        });\r\n    }\r\n}\r\n\r\nasync function eliminarUsuario(id) {\r\n    try {\r\n        const datos = new FormData();\r\n        datos.append('id', id);\r\n\r\n        const response = await fetch('/api/usuarios/eliminar', {\r\n            method: 'POST',\r\n            body: datos\r\n        });\r\n        const resultado = await response.json();\r\n\r\n        if(resultado.tipo === 'exito') {\r\n            Swal.fire({\r\n                icon: 'success',\r\n                title: '¡Usuario eliminado!',\r\n                text: resultado.mensaje,\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n            });\r\n\r\n            // Recargar la página después de 1.5 segundos\r\n            setTimeout(() => {\r\n                window.location.reload();\r\n            }, 1500);\r\n        } else {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Error',\r\n                text: resultado.mensaje\r\n            });\r\n        }\r\n    } catch (error) {\r\n        console.error(error);\r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: 'Hubo un error al eliminar el usuario'\r\n        });\r\n    }\r\n}\r\n\r\n\r\n"]}