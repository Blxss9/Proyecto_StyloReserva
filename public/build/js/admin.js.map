{"version":3,"sources":["admin.js"],"names":["iniciarApp","buscarPorFecha","cambiarEstadoCita","manejarTabs","gestionarServicios","gestionarUsuarios","fechaInput","document","querySelector","addEventListener","e","fechaSeleccionada","target","value","window","location","btnLimpiar","preventDefault","querySelectorAll","forEach","estado","citaId","dataset","nuevoEstado","estadoBadge","closest","Swal","fire","title","text","allowOutsideClick","showConfirmButton","willOpen","showLoading","datos","FormData","append","fetch","method","body","then","respuesta","json","resultado","tipo","clases","pendiente","completada","cancelada","className","classList","add","split","textContent","charAt","toUpperCase","slice","icon","timer","error","tabs","contents","tab","t","remove","content","this","tabId","contenidoActivo","btnNuevoServicio","mostrarFormularioServicio","btn","id","editarServicio","eliminarServicio"],"mappings":"AAIA,SAASA,IACLC,IACAC,IACAC,IACAC,IACAC,oBAGJ,SAASJ,IACL,MAAMK,EAAaC,SAASC,cAAc,UAC1C,GAAGF,EAAY,CACXA,EAAWG,iBAAiB,SAAS,SAASC,GAC1C,MAAMC,EAAoBD,EAAEE,OAAOC,MACnCC,OAAOC,SAAW,UAAUJ,KAIhC,MAAMK,EAAaT,SAASC,cAAc,oBACvCQ,GACCA,EAAWP,iBAAiB,SAAS,SAASC,GAC1CA,EAAEO,iBAEFX,EAAWO,MAAQ,GAEnBC,OAAOC,SAAW,aAMlC,SAASb,IACWK,SAASW,iBAAiB,gBAClCC,QAAQC,IACZA,EAAOX,iBAAiB,UAAU,SAASC,GACvC,MAAMW,EAASX,EAAEE,OAAOU,QAAQD,OAC1BE,EAAcb,EAAEE,OAAOC,MACvBW,EAAcd,EAAEE,OAAOa,QAAQ,aAAajB,cAAc,iBAGhEkB,KAAKC,KAAK,CACNC,MAAO,kBACPC,KAAM,mBACNC,mBAAmB,EACnBC,mBAAmB,EACnBC,SAAU,KACNN,KAAKO,iBAIb,MAAMC,EAAQ,IAAIC,SAClBD,EAAME,OAAO,KAAMf,GACnBa,EAAME,OAAO,SAAUb,GAEvB,IACIc,MAAM,oBAAqB,CACvBC,OAAQ,OACRC,KAAML,IAETM,KAAKC,GAAaA,EAAUC,QAC5BF,KAAKG,IACF,GAAsB,UAAnBA,EAAUC,KAAkB,CAE3B,MAAMC,EAAS,CACXC,UAAa,gCACbC,WAAc,8BACdC,UAAa,2BAIjBxB,EAAYyB,UAAY,0DAExBzB,EAAY0B,UAAUC,OAAON,EAAOtB,GAAa6B,MAAM,MACvD5B,EAAY6B,YAAc9B,EAAY+B,OAAO,GAAGC,cAAgBhC,EAAYiC,MAAM,GAElF9B,KAAKC,KAAK,CACN8B,KAAM,UACN7B,MAAO,qBACPC,KAAM,kDACNE,mBAAmB,EACnB2B,MAAO,UAIrB,MAAOC,GACLjC,KAAKC,KAAK,CACN8B,KAAM,QACN7B,MAAO,QACPC,KAAM,gDAO1B,SAAS1B,IACL,MAAMyD,EAAOrD,SAASW,iBAAiB,YACjC2C,EAAWtD,SAASW,iBAAiB,gBAE3C0C,EAAKzC,QAAQ2C,IACTA,EAAIrD,iBAAiB,SAAS,WAE1BmD,EAAKzC,QAAQ4C,IACTA,EAAEb,UAAUc,OAAO,kBAAmB,iBACtCD,EAAEb,UAAUC,IAAI,qBAAsB,mBAI1CU,EAAS1C,QAAQ8C,IACbA,EAAQf,UAAUC,IAAI,YAI1Be,KAAKhB,UAAUc,OAAO,qBAAsB,iBAC5CE,KAAKhB,UAAUC,IAAI,kBAAmB,iBAGtC,MAAMgB,EAAQD,KAAK5C,QAAQwC,IACrBM,EAAkB7D,SAASC,cAAc,IAAI2D,SAChDC,GACCA,EAAgBlB,UAAUc,OAAO,eAMjD,SAAS5D,IAEL,MAAMiE,EAAmB9D,SAASC,cAAc,mBAC7C6D,GACCA,EAAiB5D,iBAAiB,SAAS,WACvC6D,+BAKW/D,SAASW,iBAAiB,oBAClCC,QAAQoD,IACfA,EAAI9D,iBAAiB,SAAS,WAC1B,MAAM+D,EAAKN,KAAK5C,QAAQkD,GACxBC,eAAeD,QAKFjE,SAASW,iBAAiB,sBAClCC,QAAQoD,IACjBA,EAAI9D,iBAAiB,SAAS,WAC1B,MAAM+D,EAAKN,KAAK5C,QAAQkD,GACxBE,iBAAiBF,QAxJ7BjE,SAASE,iBAAiB,oBAAoB,WAC1CT","file":"admin.js","sourcesContent":["document.addEventListener('DOMContentLoaded', function() {\r\n    iniciarApp();\r\n});\r\n\r\nfunction iniciarApp() {\r\n    buscarPorFecha();\r\n    cambiarEstadoCita();\r\n    manejarTabs();\r\n    gestionarServicios();\r\n    gestionarUsuarios();\r\n}\r\n\r\nfunction buscarPorFecha() {\r\n    const fechaInput = document.querySelector('#fecha');\r\n    if(fechaInput) {\r\n        fechaInput.addEventListener('input', function(e) {\r\n            const fechaSeleccionada = e.target.value;\r\n            window.location = `?fecha=${fechaSeleccionada}`;\r\n        });\r\n\r\n        // Agregar evento al botón limpiar\r\n        const btnLimpiar = document.querySelector('a[href=\"/admin\"]');\r\n        if(btnLimpiar) {\r\n            btnLimpiar.addEventListener('click', function(e) {\r\n                e.preventDefault();\r\n                // Limpiar el input de fecha\r\n                fechaInput.value = '';\r\n                // Redirigir a admin sin parámetros\r\n                window.location = '/admin';\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nfunction cambiarEstadoCita() {\r\n    const estados = document.querySelectorAll('.estado-cita');\r\n    estados.forEach(estado => {\r\n        estado.addEventListener('change', function(e) {\r\n            const citaId = e.target.dataset.citaId;\r\n            const nuevoEstado = e.target.value;\r\n            const estadoBadge = e.target.closest('.bg-white').querySelector('.estado-badge');\r\n\r\n            // Mostrar loading\r\n            Swal.fire({\r\n                title: 'Actualizando...',\r\n                text: 'Por favor espere',\r\n                allowOutsideClick: false,\r\n                showConfirmButton: false,\r\n                willOpen: () => {\r\n                    Swal.showLoading();\r\n                }\r\n            });\r\n\r\n            const datos = new FormData();\r\n            datos.append('id', citaId);\r\n            datos.append('estado', nuevoEstado);\r\n\r\n            try {\r\n                fetch('/api/citas/estado', {\r\n                    method: 'POST',\r\n                    body: datos\r\n                })\r\n                .then(respuesta => respuesta.json())\r\n                .then(resultado => {\r\n                    if(resultado.tipo === 'exito') {\r\n                        // Actualizar el badge de estado\r\n                        const clases = {\r\n                            'pendiente': 'bg-yellow-100 text-yellow-800',\r\n                            'completada': 'bg-green-100 text-green-800',\r\n                            'cancelada': 'bg-red-100 text-red-800'\r\n                        };\r\n                        \r\n                        // Remover clases anteriores\r\n                        estadoBadge.className = 'estado-badge px-3 py-1 rounded-full text-sm font-medium';\r\n                        // Agregar nuevas clases\r\n                        estadoBadge.classList.add(...clases[nuevoEstado].split(' '));\r\n                        estadoBadge.textContent = nuevoEstado.charAt(0).toUpperCase() + nuevoEstado.slice(1);\r\n\r\n                        Swal.fire({\r\n                            icon: 'success',\r\n                            title: 'Estado Actualizado',\r\n                            text: 'El estado de la cita se actualizó correctamente',\r\n                            showConfirmButton: false,\r\n                            timer: 1500\r\n                        });\r\n                    }\r\n                });\r\n            } catch (error) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: 'Hubo un error al actualizar el estado'\r\n                });\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction manejarTabs() {\r\n    const tabs = document.querySelectorAll('.tab-btn');\r\n    const contents = document.querySelectorAll('.tab-content');\r\n\r\n    tabs.forEach(tab => {\r\n        tab.addEventListener('click', function() {\r\n            // Remover clases activas de todas las tabs\r\n            tabs.forEach(t => {\r\n                t.classList.remove('border-blue-500', 'text-blue-600');\r\n                t.classList.add('border-transparent', 'text-gray-500');\r\n            });\r\n\r\n            // Ocultar todos los contenidos\r\n            contents.forEach(content => {\r\n                content.classList.add('hidden');\r\n            });\r\n\r\n            // Activar la tab seleccionada\r\n            this.classList.remove('border-transparent', 'text-gray-500');\r\n            this.classList.add('border-blue-500', 'text-blue-600');\r\n            \r\n            // Mostrar el contenido correspondiente\r\n            const tabId = this.dataset.tab;\r\n            const contenidoActivo = document.querySelector(`#${tabId}-tab`);\r\n            if(contenidoActivo) {\r\n                contenidoActivo.classList.remove('hidden');\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction gestionarServicios() {\r\n    // Nuevo servicio\r\n    const btnNuevoServicio = document.querySelector('#nuevo-servicio');\r\n    if(btnNuevoServicio) {\r\n        btnNuevoServicio.addEventListener('click', function() {\r\n            mostrarFormularioServicio();\r\n        });\r\n    }\r\n\r\n    // Editar servicio\r\n    const btnsEditar = document.querySelectorAll('.editar-servicio');\r\n    btnsEditar.forEach(btn => {\r\n        btn.addEventListener('click', function() {\r\n            const id = this.dataset.id;\r\n            editarServicio(id);\r\n        });\r\n    });\r\n\r\n    // Eliminar servicio\r\n    const btnsEliminar = document.querySelectorAll('.eliminar-servicio');\r\n    btnsEliminar.forEach(btn => {\r\n        btn.addEventListener('click', function() {\r\n            const id = this.dataset.id;\r\n            eliminarServicio(id);\r\n        });\r\n    });\r\n}\r\n\r\n\r\n"]}