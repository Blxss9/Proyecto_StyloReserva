{"version":3,"sources":["app.js"],"names":["paso","pasoInicial","pasoFinal","cita","id","nombre","fecha","hora","servicios","cargarDatosGuardados","citaGuardada","localStorage","getItem","pasoGuardado","citaObj","JSON","parse","Object","assign","forEach","servicio","divServicio","document","querySelector","classList","add","inputFecha","value","mostrarHorasDisponibles","parseInt","mostrarSeccion","mostrarResumen","iniciarApp","tabs","botonesPaginador","paginaSiguiente","paginaAnterior","consultarAPI","idCliente","nombreCliente","seleccionarFecha","seleccionarHora","async","url","respuesta","fetch","resultado","json","error","console","mostrarAlerta","mostrarServicios","contenedorServicios","innerHTML","nombre_servicio","precio","precioFormateado","toLocaleString","servicioDiv","createElement","dataset","idServicio","onclick","seleccionarServicio","appendChild","btnSiguiente","addEventListener","validarServicios","validarFecha","btnAnterior","disabled","remove","textContent","seccionAnterior","pasoSelector","seccion","tabAnterior","tab","progreso","style","width","setItem","mensaje","tipo","Swal","alert","fire","icon","title","text","querySelectorAll","boton","e","pasoSeleccionado","target","length","validarResumen","values","includes","some","agregado","filter","stringify","inputId","inputNombre","horasDisponibles","hoy","Date","año","getFullYear","mes","getMonth","toString","padStart","dia","getDate","fechaMinima","min","añoSel","mesSel","diaSel","split","fechaSeleccionada","getDay","horas","mañana","tarde","noche","periodo","contenedor","type","btn","this","resumen","firstChild","removeChild","mensajeError","contenedorResumen","tituloServicios","servicioParrafo","Intl","NumberFormat","currency","format","fechaFormateada","toLocaleDateString","weekday","year","month","day","fechaCapitalizada","charAt","toUpperCase","slice","fechaCita","horaCita","total","reduce","parseFloat","totalFormateado","totalParrafo"],"mappings":"AAAA,IAAAA,KAAA,EACA,MAAAC,YAAA,EACAC,UAAA,EAEAC,KAAA,CACAC,GAAA,GACAC,OAAA,GACAC,MAAA,GACAC,KAAA,GACAC,UAAA,IAGA,SAAAC,uBACA,MAAAC,EAAAC,aAAAC,QAAA,QACAC,EAAAF,aAAAC,QAAA,QAEA,GAAAF,EAAA,CACA,MAAAI,EAAAC,KAAAC,MAAAN,GAYA,GAXAO,OAAAC,OAAAf,KAAAW,GAEA,IAAAd,MACAG,KAAAK,UAAAW,QAAAC,IACA,MAAAC,EAAAC,SAAAC,cAAA,sBAAAH,EAAAhB,QACAiB,GACAA,EAAAG,UAAAC,IAAA,kBAKA,IAAAzB,MAAAG,KAAAG,MAAA,CACA,MAAAoB,EAAAJ,SAAAC,cAAA,UACAG,IACAA,EAAAC,MAAAxB,KAAAG,MACAsB,4BAKAf,IACAb,KAAA6B,SAAAhB,GACAiB,iBACAC,kBASA,SAAAC,aACAF,iBACAG,OACAC,mBACAC,kBACAC,iBAEAC,eAEAC,YACAC,gBACAC,mBACAC,kBAGAC,eAAAL,eACA,IACA,MAAAM,EAAA,iBACAC,QAAAC,MAAAF,GACAG,QAAAF,EAAAG,OAEAD,EAAAE,OAGAC,QAAAD,MAAAF,EAAAE,OACAE,cAAA,gCAAA,UAHAC,iBAAAL,GAMA,MAAAE,GACAC,QAAAD,MAAAA,GACAE,cAAA,gCAAA,UAIA,SAAAC,iBAAA3C,GACA,MAAA4C,EAAA9B,SAAAC,cAAA,cAEA6B,GAMAA,EAAAC,UAAA,GAEA7C,EAAAW,QAAAC,IACA,MAAAhB,GAAAA,EAAAkD,gBAAAA,EAAAC,OAAAA,GAAAnC,EAGAoC,EAAA3B,SAAA0B,GAAAE,eAAA,SAEAC,EAAApC,SAAAqC,cAAA,OACAD,EAAAlC,UAAAC,IAAA,YACAiC,EAAAE,QAAAC,WAAAzD,EAEAsD,EAAAL,UAAA,4CACAC,kDACAE,kBAGAE,EAAAI,QAAA,IAAAC,oBAAA3C,GAEAgC,EAAAY,YAAAN,MAxBAT,QAAAD,MAAA,wCA4BA,SAAAb,kBACA,MAAA8B,EAAA3C,SAAAC,cAAA,cAEA0C,GAEAA,EAAAC,iBAAA,QAAA,KACAlE,MAxHA,IA0HA,IAAAA,MAEAmE,sBAGA,IAAAnE,MAEAoE,kBAGApE,OACA8B,iBACAI,mBAGAH,oBAIA,SAAAK,iBACA,MAAAiC,EAAA/C,SAAAC,cAAA,aAEA8C,GAEAA,EAAAH,iBAAA,QAAA,KACAlE,MApJA,IAsJAA,OACA8B,iBACAI,sBAIA,SAAAA,mBACA,MAAAmC,EAAA/C,SAAAC,cAAA,aACA0C,EAAA3C,SAAAC,cAAA,cAEA8C,GAAAJ,IAEA,IAAAjE,MACAqE,EAAA7C,UAAAC,IAAA,cACA4C,EAAAC,UAAA,IAEAD,EAAA7C,UAAA+C,OAAA,cACAF,EAAAC,UAAA,GAGA,IAAAtE,MACAiE,EAAAzC,UAAAC,IAAA,cACAwC,EAAAO,YAAA,YACAP,EAAAK,UAAA,IAEAL,EAAAzC,UAAA+C,OAAA,cACAN,EAAAK,UAAA,EACAL,EAAAO,YAAA,gBAIA,SAAA1C,iBAEA,MAAA2C,EAAAnD,SAAAC,cAAA,yBACAkD,GACAA,EAAAjD,UAAAC,IAAA,UAIA,MAAAiD,EAAA,SAAA1E,KACA2E,EAAArD,SAAAC,cAAAmD,GACAC,GACAA,EAAAnD,UAAA+C,OAAA,UAIA,MAAAK,EAAAtD,SAAAC,cAAA,4BACAqD,IACAA,EAAApD,UAAA+C,OAAA,cAAA,cACAK,EAAApD,UAAAC,IAAA,cAAA,kBAIA,MAAAoD,EAAAvD,SAAAC,cAAA,eAAAvB,UACA6E,IACAA,EAAArD,UAAA+C,OAAA,cAAA,iBACAM,EAAArD,UAAAC,IAAA,cAAA,eAIA,MAAAqD,EAAAxD,SAAAC,cAAA,aACAuD,IACAA,EAAAC,MAAAC,MAAAhF,KAnNA,EAmNA,IAAA,KAGAW,aAAAsE,QAAA,OAAAjF,MAGA,SAAAkD,cAAAgC,EAAAC,GACA,GAAA,oBAAAC,KAGA,OAFAnC,QAAAD,MAAA,oCACAqC,MAAAH,GAIAE,KAAAE,KAAA,CACAC,KAAAJ,EACAK,MAAA,UAAAL,EAAA,QAAA,QACAM,KAAAP,IAIA,SAAAjD,OACAX,SAAAoE,iBAAA,gBACAvE,QAAAwE,IACAA,EAAAzB,iBAAA,SAAA,SAAA0B,GACA,MAAAC,EAAAhE,SAAA+D,EAAAE,OAAAlC,QAAA5D,MAGA,GAAA6F,EAAA7F,KAIA,OAHAA,KAAA6F,EACA/D,sBACAI,oBAKA,IAAAlC,MAAAmE,sBAIA,IAAAnE,MAAAoE,kBAKAyB,EAAA7F,MAAA,GACAA,KAAA6F,EACA/D,iBACAI,oBAGAgB,cAAA,yCAAA,eAMA,SAAAiB,mBACA,OAAA,IAAAhE,KAAAK,UAAAuF,SACA7C,cAAA,yCAAA,UACA,GAKA,SAAAkB,eAGA,QAAA,KAFA9C,SAAAC,cAAA,UAAAI,QAEAxB,KAAAI,QACA2C,cAAA,iCAAA,UACA,GAMA,SAAA8C,iBAEA,OADA/E,OAAAgF,OAAA9F,MACA+F,SAAA,MACAhD,cAAA,6BAAA,UACA,GAKA,SAAAa,oBAAA3C,GACA,MAAAhB,GAAAA,GAAAgB,GACAZ,UAAAA,GAAAL,KAGAkB,EAAAC,SAAAC,cAAA,sBAAAnB,OAGAI,EAAA2F,KAAAC,GAAAA,EAAAhG,KAAAA,IAEAD,KAAAK,UAAAA,EAAA6F,OAAAD,GAAAA,EAAAhG,KAAAA,GACAiB,EAAAG,UAAA+C,OAAA,kBAGApE,KAAAK,UAAA,IAAAA,EAAAY,GACAC,EAAAG,UAAAC,IAAA,iBAGAd,aAAAsE,QAAA,OAAAlE,KAAAuF,UAAAnG,OACA4B,iBAIA,SAAAO,YAEA,MAAAiE,EAAAjF,SAAAC,cAAA,OACAgF,IACApG,KAAAC,GAAAmG,EAAA5E,OAIA,SAAAY,gBAEA,MAAAiE,EAAAlF,SAAAC,cAAA,WACAiF,IACArG,KAAAE,OAAAmG,EAAA7E,OAIA,SAAAa,mBACA,MAAAd,EAAAJ,SAAAC,cAAA,UACAkF,EAAAnF,SAAAC,cAAA,sBAEA,IAAAG,IAAA+E,EAAA,OAGA,MAAAC,EAAA,IAAAC,KACAC,EAAAF,EAAAG,cACAC,GAAAJ,EAAAK,WAAA,GAAAC,WAAAC,SAAA,EAAA,KACAC,EAAAR,EAAAS,UAAAH,WAAAC,SAAA,EAAA,KACAG,EAAA,GAAAR,KAAAE,KAAAI,IAEAxF,EAAA2F,IAAAD,EAGAjH,KAAAG,QACAoB,EAAAC,MAAAxB,KAAAG,MACAsB,2BAGAF,EAAAwC,iBAAA,SAAA,SAAA0B,GACA,MAAA0B,EAAAC,EAAAC,GAAA5B,EAAAE,OAAAnE,MAAA8F,MAAA,KACAC,EAAA,IAAAf,KAAAW,EAAAC,EAAA,EAAAC,GAGA,GAAAE,EAFA,IAAAf,KAAAC,EAAAE,EAAA,EAAAI,GAGAtB,EAAAE,OAAAnE,MAAA,GACAuB,cAAA,uCAAA,SACAuD,EAAAjF,UAAAC,IAAA,UACAtB,KAAAG,MAAA,GACAH,KAAAI,KAAA,OACA,CACA,MAAA2G,EAAAQ,EAAAC,SAEA,CAAA,EAAA,GAAAzB,SAAAgB,IACAtB,EAAAE,OAAAnE,MAAA,GACAuB,cAAA,gCAAA,SACAuD,EAAAjF,UAAAC,IAAA,UACAtB,KAAAG,MAAA,GACAH,KAAAI,KAAA,KAEAJ,KAAAG,MAAAsF,EAAAE,OAAAnE,MACAC,2BAGAG,iBACApB,aAAAsE,QAAA,OAAAlE,KAAAuF,UAAAnG,UAIA,SAAAyB,0BACA,MAAA6E,EAAAnF,SAAAC,cAAA,sBAEA,IAAAkF,EAEA,YADAxD,QAAAD,MAAA,qDAIAyD,EAAAjF,UAAA+C,OAAA,UAGA,MAAAqD,EAAA,CACAC,SAAA,CAAA,QAAA,QAAA,SACAC,MAAA,CAAA,QAAA,QAAA,QAAA,QAAA,SACAC,MAAA,CAAA,QAAA,UAIA,CAAA,SAAA,QAAA,SAAA5G,QAAA6G,IACA,MAAAC,EAAA3G,SAAAC,cAAA,UAAAyG,GACAC,GAKAA,EAAA5E,UAAA,GAEAuE,EAAAI,GAAA7G,QAAAZ,IACA,MAAAoF,EAAArE,SAAAqC,cAAA,UACAgC,EAAAuC,KAAA,SACAvC,EAAAnE,UAAAC,IAAA,OAAA,OAAA,UAAA,SAAA,UAAA,oBAAA,oBAEAtB,KAAAI,OAAAA,GACAoF,EAAAnE,UAAAC,IAAA,cAAA,cAGAkE,EAAAnB,YAAAjE,EAEAoF,EAAA7B,QAAA,WACAxC,SAAAoE,iBAAA,yBAAAvE,QAAAgH,IACAA,EAAA3G,UAAA+C,OAAA,cAAA,gBAGA6D,KAAA5G,UAAAC,IAAA,cAAA,cACAtB,KAAAI,KAAAA,EAEAI,aAAAsE,QAAA,OAAAlE,KAAAuF,UAAAnG,OACA4B,kBAGAkG,EAAAjE,YAAA2B,MA7BA1C,QAAAD,MAAA,qCAAAgF,KAkCA,SAAAvF,kBACAnB,SAAAC,cAAA,SACA2C,iBAAA,SAAA,SAAA0B,GACA,MACArF,EADAqF,EAAAE,OAAAnE,MACA8F,MAAA,KAAA,GACAlH,EAAA,IAAAA,EAAA,IACAqF,EAAAE,OAAAnE,MAAA,GACAuB,cAAA,iBAAA,UAEA/C,KAAAI,KAAAqF,EAAAE,OAAAnE,SAKA,SAAAI,iBACA,MAAAsG,EAAA/G,SAAAC,cAAA,iBAEA,IAAA8G,EAAA,OAGA,KAAAA,EAAAC,YACAD,EAAAE,YAAAF,EAAAC,YAIA,GAAArH,OAAAgF,OAAA9F,MAAA+F,SAAA,KAAA,IAAA/F,KAAAK,UAAAuF,OAAA,CACA,MAAAyC,EAAAlH,SAAAqC,cAAA,KAIA,OAHA6E,EAAAhH,UAAAC,IAAA,cAAA,gBAAA,QACA+G,EAAAhE,YAAA,kCACA6D,EAAArE,YAAAwE,GAIA,MAAAnI,OAAAA,EAAAC,MAAAA,EAAAC,KAAAA,EAAAC,UAAAA,GAAAL,KAGAsI,EAAAnH,SAAAqC,cAAA,OACA8E,EAAAjH,UAAAC,IAAA,MAAA,aAGA,MAAAc,EAAAjB,SAAAqC,cAAA,KACApB,EAAAc,UAAA,0CAAAhD,EACAkC,EAAAf,UAAAC,IAAA,WAGA,MAAA2B,EAAA9B,SAAAqC,cAAA,OACAP,EAAA5B,UAAAC,IAAA,aAGA,MAAAiH,EAAApH,SAAAqC,cAAA,MACA+E,EAAAlE,YAAA,2BACAkE,EAAAlH,UAAAC,IAAA,YAAA,UAAA,QACA2B,EAAAY,YAAA0E,GAGAlI,EAAAW,QAAAC,IACA,MAAAkC,gBAAAA,EAAAC,OAAAA,GAAAnC,EACAuH,EAAArH,SAAAqC,cAAA,KAEAH,EAAA,IAAAoF,KAAAC,aAAA,QAAA,CACA9D,MAAA,WACA+D,SAAA,QACAC,OAAAxF,GACAoF,EAAAnE,YAAA,GAAAlB,OAAAE,IACAJ,EAAAY,YAAA2E,KAIA,MAAA/B,EAAAE,EAAAI,GAAA5G,EAAAmH,MAAA,KAYAuB,EATA,IAAArC,KAAAC,EAAAE,EAAA,EAAAI,GASA+B,mBAAA,QAPA,CACAC,QAAA,OACAC,KAAA,UACAC,MAAA,OACAC,IAAA,YAIAC,EAAAN,EAAAO,OAAA,GAAAC,cAAAR,EAAAS,MAAA,GAEAC,EAAApI,SAAAqC,cAAA,KACA+F,EAAArG,UAAA,yCAAAiG,EACAI,EAAAlI,UAAAC,IAAA,WAEA,MAAAkI,EAAArI,SAAAqC,cAAA,KACAgG,EAAAtG,UAAA,wCAAA9C,QACAoJ,EAAAnI,UAAAC,IAAA,WAGA,MAAAmI,EAAApJ,EAAAqJ,OAAA,CAAAD,EAAAxI,IAAAwI,EAAAE,WAAA1I,EAAAmC,QAAA,GACAwG,EAAA,IAAAnB,KAAAC,aAAA,QAAA,CACA9D,MAAA,WACA+D,SAAA,QACAC,OAAAa,GAEAI,EAAA1I,SAAAqC,cAAA,KAeA,GAdAqG,EAAA3G,UAAA,yCAAA0G,EACAC,EAAAxI,UAAAC,IAAA,UAAA,QAGAgH,EAAAzE,YAAAzB,GACAkG,EAAAzE,YAAAZ,GACAqF,EAAAzE,YAAA0F,GACAjB,EAAAzE,YAAA2F,GACAlB,EAAAzE,YAAAgG,GAGA3B,EAAArE,YAAAyE,GAGA,IAAAzI,KAAA,CACA,MAAAiE,EAAA3C,SAAAC,cAAA,cACA0C,IACAA,EAAAzC,UAAA+C,OAAA,cACAN,EAAAK,UAAA,IAlgBAhD,SAAA4C,iBAAA,oBAAA,WACAzD,uBACAuB","file":"app.js","sourcesContent":["let paso = 1;\r\nconst pasoInicial = 1;\r\nconst pasoFinal = 4;\r\n\r\nconst cita = {\r\n    id: '',\r\n    nombre: '',\r\n    fecha: '',\r\n    hora: '',\r\n    servicios: []\r\n}\r\n\r\nfunction cargarDatosGuardados() {\r\n    const citaGuardada = localStorage.getItem('cita');\r\n    const pasoGuardado = localStorage.getItem('paso');\r\n    \r\n    if (citaGuardada) {\r\n        const citaObj = JSON.parse(citaGuardada);\r\n        Object.assign(cita, citaObj);\r\n        \r\n        if(paso === 1) {\r\n            cita.servicios.forEach(servicio => {\r\n                const divServicio = document.querySelector(`[data-id-servicio=\"${servicio.id}\"]`);\r\n                if(divServicio) {\r\n                    divServicio.classList.add('seleccionado');\r\n                }\r\n            });\r\n        }\r\n        \r\n        if(paso === 2 && cita.fecha) {\r\n            const inputFecha = document.querySelector('#fecha');\r\n            if(inputFecha) {\r\n                inputFecha.value = cita.fecha;\r\n                mostrarHorasDisponibles();\r\n            }\r\n        }\r\n    }\r\n    \r\n    if (pasoGuardado) {\r\n        paso = parseInt(pasoGuardado);\r\n        mostrarSeccion();\r\n        mostrarResumen();\r\n    }\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    cargarDatosGuardados();\r\n    iniciarApp();\r\n});\r\n\r\nfunction iniciarApp() {\r\n    mostrarSeccion();\r\n    tabs();\r\n    botonesPaginador();\r\n    paginaSiguiente();\r\n    paginaAnterior();\r\n    \r\n    consultarAPI();\r\n    \r\n    idCliente();\r\n    nombreCliente();\r\n    seleccionarFecha();\r\n    seleccionarHora();\r\n}\r\n\r\nasync function consultarAPI() {\r\n    try {\r\n        const url = '/api/servicios';\r\n        const respuesta = await fetch(url);\r\n        const resultado = await respuesta.json();\r\n        \r\n        if(!resultado.error) {\r\n            mostrarServicios(resultado);\r\n        } else {\r\n            console.error(resultado.error);\r\n            mostrarAlerta('Error al cargar los servicios', 'error');\r\n        }\r\n        \r\n    } catch (error) {\r\n        console.error(error);\r\n        mostrarAlerta('Error al cargar los servicios', 'error');\r\n    }\r\n}\r\n\r\nfunction mostrarServicios(servicios) {\r\n    const contenedorServicios = document.querySelector('#servicios');\r\n    \r\n    if(!contenedorServicios) {\r\n        console.error('El contenedor de servicios no existe');\r\n        return;\r\n    }\r\n    \r\n    // Limpiar el HTML previo\r\n    contenedorServicios.innerHTML = '';\r\n    \r\n    servicios.forEach(servicio => {\r\n        const { id, nombre_servicio, precio } = servicio;\r\n\r\n        // Formatear el precio como número entero\r\n        const precioFormateado = parseInt(precio).toLocaleString('es-CL');\r\n\r\n        const servicioDiv = document.createElement('DIV');\r\n        servicioDiv.classList.add('servicio');\r\n        servicioDiv.dataset.idServicio = id;\r\n\r\n        servicioDiv.innerHTML = `\r\n            <p class=\"nombre-servicio\">${nombre_servicio}</p>\r\n            <p class=\"precio-servicio\">$${precioFormateado}</p>\r\n        `;\r\n\r\n        servicioDiv.onclick = () => seleccionarServicio(servicio);\r\n\r\n        contenedorServicios.appendChild(servicioDiv);\r\n    });\r\n}\r\n\r\nfunction paginaSiguiente() {\r\n    const btnSiguiente = document.querySelector('#siguiente');\r\n    \r\n    if(!btnSiguiente) return;\r\n    \r\n    btnSiguiente.addEventListener('click', () => {\r\n        if(paso >= pasoFinal) return;\r\n        \r\n        if(paso === 1) {\r\n            // Validar que se haya seleccionado al menos un servicio\r\n            if(!validarServicios()) return;\r\n        }\r\n        \r\n        if(paso === 2) {\r\n            // Validar que se haya seleccionado fecha y hora\r\n            if(!validarFecha()) return;\r\n        }\r\n        \r\n        paso++;\r\n        mostrarSeccion();\r\n        botonesPaginador();\r\n        \r\n        // Actualizar el resumen al cambiar de página\r\n        mostrarResumen();\r\n    });\r\n}\r\n\r\nfunction paginaAnterior() {\r\n    const btnAnterior = document.querySelector('#anterior');\r\n    \r\n    if(!btnAnterior) return;\r\n    \r\n    btnAnterior.addEventListener('click', () => {\r\n        if(paso <= pasoInicial) return;\r\n        \r\n        paso--;\r\n        mostrarSeccion();\r\n        botonesPaginador();\r\n    });\r\n}\r\n\r\nfunction botonesPaginador() {\r\n    const btnAnterior = document.querySelector('#anterior');\r\n    const btnSiguiente = document.querySelector('#siguiente');\r\n    \r\n    if(!btnAnterior || !btnSiguiente) return;\r\n\r\n    if(paso === 1) {\r\n        btnAnterior.classList.add('opacity-50');\r\n        btnAnterior.disabled = true;\r\n    } else {\r\n        btnAnterior.classList.remove('opacity-50');\r\n        btnAnterior.disabled = false;\r\n    }\r\n\r\n    if(paso === 4) {\r\n        btnSiguiente.classList.add('opacity-50');\r\n        btnSiguiente.textContent = 'Confirmar';\r\n        btnSiguiente.disabled = true;\r\n    } else {\r\n        btnSiguiente.classList.remove('opacity-50');\r\n        btnSiguiente.disabled = false;\r\n        btnSiguiente.textContent = 'Siguiente »';\r\n    }\r\n}\r\n\r\nfunction mostrarSeccion() {\r\n    // Ocultar la sección que tenga la clase de mostrar\r\n    const seccionAnterior = document.querySelector('.seccion:not(.hidden)');\r\n    if(seccionAnterior) {\r\n        seccionAnterior.classList.add('hidden');\r\n    }\r\n    \r\n    // Seleccionar la sección con el paso\r\n    const pasoSelector = `#paso-${paso}`;\r\n    const seccion = document.querySelector(pasoSelector);\r\n    if(seccion) {\r\n        seccion.classList.remove('hidden');\r\n    }\r\n    \r\n    // Quita la clase \"actual\" al tab anterior\r\n    const tabAnterior = document.querySelector('.step-button.bg-blue-500');\r\n    if(tabAnterior) {\r\n        tabAnterior.classList.remove('bg-blue-500', 'text-white');\r\n        tabAnterior.classList.add('bg-gray-300', 'text-gray-600');\r\n    }\r\n    \r\n    // Resalta el tab actual\r\n    const tab = document.querySelector(`[data-paso=\"${paso}\"]`);\r\n    if(tab) {\r\n        tab.classList.remove('bg-gray-300', 'text-gray-600');\r\n        tab.classList.add('bg-blue-500', 'text-white');\r\n    }\r\n    \r\n    // Actualizar la barra de progreso\r\n    const progreso = document.querySelector('#progress');\r\n    if(progreso) {\r\n        progreso.style.width = `${(paso / pasoFinal) * 100}%`;\r\n    }\r\n    \r\n    localStorage.setItem('paso', paso);\r\n}\r\n\r\nfunction mostrarAlerta(mensaje, tipo) {\r\n    if(typeof Swal === 'undefined') {\r\n        console.error('SweetAlert2 no está cargado');\r\n        alert(mensaje);\r\n        return;\r\n    }\r\n\r\n    Swal.fire({\r\n        icon: tipo,\r\n        title: tipo === 'error' ? 'Error' : 'Éxito',\r\n        text: mensaje\r\n    });\r\n}\r\n\r\nfunction tabs() {\r\n    const botones = document.querySelectorAll('.step-button');\r\n    botones.forEach(boton => {\r\n        boton.addEventListener('click', function(e) {\r\n            const pasoSeleccionado = parseInt(e.target.dataset.paso);\r\n            \r\n            // Si intenta retroceder, permitirlo\r\n            if (pasoSeleccionado < paso) {\r\n                paso = pasoSeleccionado;\r\n                mostrarSeccion();\r\n                botonesPaginador();\r\n                return;\r\n            }\r\n\r\n            // Validaciones para avanzar\r\n            if (paso === 1 && !validarServicios()) {\r\n                return;\r\n            }\r\n\r\n            if (paso === 2 && !validarFecha()) {\r\n                return;\r\n            }\r\n\r\n            // Si todas las validaciones pasan, permitir el cambio\r\n            if (pasoSeleccionado - paso === 1) {\r\n                paso = pasoSeleccionado;\r\n                mostrarSeccion();\r\n                botonesPaginador();\r\n            } else {\r\n                // Si intenta saltar más de una sección, mostrar alerta\r\n                mostrarAlerta('Por favor, complete los pasos en orden', 'error');\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction validarServicios() {\r\n    if(cita.servicios.length === 0) {\r\n        mostrarAlerta('Debes seleccionar al menos un servicio', 'error');\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction validarFecha() {\r\n    const fecha = document.querySelector('#fecha').value;\r\n    \r\n    if(fecha === '' || !cita.hora) {\r\n        mostrarAlerta('Debes seleccionar fecha y hora', 'error');\r\n        return false;\r\n    }\r\n    \r\n    return true;\r\n}\r\n\r\nfunction validarResumen() {\r\n    const elementos = Object.values(cita);\r\n    if(elementos.includes('')) {\r\n        mostrarAlerta('Faltan datos por confirmar', 'error');\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction seleccionarServicio(servicio) {\r\n    const { id } = servicio;\r\n    const { servicios } = cita;\r\n\r\n    // Identificar el elemento clickeado\r\n    const divServicio = document.querySelector(`[data-id-servicio=\"${id}\"]`);\r\n\r\n    // Comprobar si un servicio ya fue agregado o quitarlo\r\n    if(servicios.some(agregado => agregado.id === id)) {\r\n        // Eliminarlo\r\n        cita.servicios = servicios.filter(agregado => agregado.id !== id);\r\n        divServicio.classList.remove('seleccionado');\r\n    } else {\r\n        // Agregarlo\r\n        cita.servicios = [...servicios, servicio];\r\n        divServicio.classList.add('seleccionado');\r\n    }\r\n    \r\n    localStorage.setItem('cita', JSON.stringify(cita));\r\n    mostrarResumen();\r\n}\r\n\r\n// También necesitamos implementar las funciones de cliente\r\nfunction idCliente() {\r\n    // Verificar si el elemento existe antes de acceder a su valor\r\n    const inputId = document.querySelector('#id');\r\n    if(inputId) {\r\n        cita.id = inputId.value;\r\n    }\r\n}\r\n\r\nfunction nombreCliente() {\r\n    // Verificar si el elemento existe antes de acceder a su valor\r\n    const inputNombre = document.querySelector('#nombre');\r\n    if(inputNombre) {\r\n        cita.nombre = inputNombre.value;\r\n    }\r\n}\r\n\r\nfunction seleccionarFecha() {\r\n    const inputFecha = document.querySelector('#fecha');\r\n    const horasDisponibles = document.querySelector('#horas-disponibles');\r\n    \r\n    if(!inputFecha || !horasDisponibles) return;\r\n    \r\n    // Establecer la fecha mínima como hoy\r\n    const hoy = new Date();\r\n    const año = hoy.getFullYear();\r\n    const mes = (hoy.getMonth() + 1).toString().padStart(2, '0');\r\n    const dia = hoy.getDate().toString().padStart(2, '0');\r\n    const fechaMinima = `${año}-${mes}-${dia}`;\r\n    \r\n    inputFecha.min = fechaMinima;\r\n    \r\n    // Si hay una fecha guardada, establecerla\r\n    if(cita.fecha) {\r\n        inputFecha.value = cita.fecha;\r\n        mostrarHorasDisponibles();\r\n    }\r\n    \r\n    inputFecha.addEventListener('input', function(e) {\r\n        const [añoSel, mesSel, diaSel] = e.target.value.split('-');\r\n        const fechaSeleccionada = new Date(añoSel, mesSel - 1, diaSel);\r\n        const fechaHoy = new Date(año, mes - 1, dia);\r\n        \r\n        if(fechaSeleccionada < fechaHoy) {\r\n            e.target.value = '';\r\n            mostrarAlerta('No puedes seleccionar fechas pasadas', 'error');\r\n            horasDisponibles.classList.add('hidden');\r\n            cita.fecha = '';\r\n            cita.hora = '';\r\n        } else {\r\n            const dia = fechaSeleccionada.getDay();\r\n            \r\n            if([6, 0].includes(dia)) {\r\n                e.target.value = '';\r\n                mostrarAlerta('Fines de semana no permitidos', 'error');\r\n                horasDisponibles.classList.add('hidden');\r\n                cita.fecha = '';\r\n                cita.hora = '';\r\n            } else {\r\n                cita.fecha = e.target.value;\r\n                mostrarHorasDisponibles();\r\n            }\r\n        }\r\n        mostrarResumen();\r\n        localStorage.setItem('cita', JSON.stringify(cita));\r\n    });\r\n}\r\n\r\nfunction mostrarHorasDisponibles() {\r\n    const horasDisponibles = document.querySelector('#horas-disponibles');\r\n    \r\n    if(!horasDisponibles) {\r\n        console.error('No se encontró el contenedor de horas disponibles');\r\n        return;\r\n    }\r\n    \r\n    horasDisponibles.classList.remove('hidden');\r\n\r\n    // Definir las horas disponibles por período\r\n    const horas = {\r\n        mañana: ['10:00', '10:50', '11:40'],\r\n        tarde: ['12:30', '15:00', '15:50', '16:40', '17:30'],\r\n        noche: ['18:20', '19:10']\r\n    };\r\n\r\n    // Limpiar contenedores\r\n    ['mañana', 'tarde', 'noche'].forEach(periodo => {\r\n        const contenedor = document.querySelector(`#horas-${periodo}`);\r\n        if(!contenedor) {\r\n            console.error(`No se encontró el contenedor para ${periodo}`);\r\n            return;\r\n        }\r\n        \r\n        contenedor.innerHTML = '';\r\n        \r\n        horas[periodo].forEach(hora => {\r\n            const boton = document.createElement('BUTTON');\r\n            boton.type = 'button';\r\n            boton.classList.add('px-4', 'py-2', 'text-sm', 'border', 'rounded', 'hover:bg-blue-500', 'hover:text-white');\r\n            \r\n            if(cita.hora === hora) {\r\n                boton.classList.add('bg-blue-500', 'text-white');\r\n            }\r\n            \r\n            boton.textContent = hora;\r\n            \r\n            boton.onclick = function() {\r\n                document.querySelectorAll('button[type=\"button\"]').forEach(btn => {\r\n                    btn.classList.remove('bg-blue-500', 'text-white');\r\n                });\r\n                \r\n                this.classList.add('bg-blue-500', 'text-white');\r\n                cita.hora = hora;\r\n                \r\n                localStorage.setItem('cita', JSON.stringify(cita));\r\n                mostrarResumen();\r\n            };\r\n            \r\n            contenedor.appendChild(boton);\r\n        });\r\n    });\r\n}\r\n\r\nfunction seleccionarHora() {\r\n    const inputHora = document.querySelector('#hora');\r\n    inputHora.addEventListener('input', function(e) {\r\n        const horaCita = e.target.value;\r\n        const hora = horaCita.split(\":\")[0];\r\n        if(hora < 10 || hora > 18) {\r\n            e.target.value = '';\r\n            mostrarAlerta('Hora no válida', 'error');\r\n        } else {\r\n            cita.hora = e.target.value;\r\n        }\r\n    });\r\n}\r\n\r\nfunction mostrarResumen() {\r\n    const resumen = document.querySelector('#resumen-cita');\r\n\r\n    if(!resumen) return;\r\n\r\n    // Limpiar el contenido\r\n    while(resumen.firstChild) {\r\n        resumen.removeChild(resumen.firstChild);\r\n    }\r\n\r\n    // Verificar si hay servicios seleccionados y datos completos\r\n    if(Object.values(cita).includes('') || cita.servicios.length === 0) {\r\n        const mensajeError = document.createElement('P');\r\n        mensajeError.classList.add('text-center', 'text-gray-600', 'mt-5');\r\n        mensajeError.textContent = 'Faltan datos por completar';\r\n        resumen.appendChild(mensajeError);\r\n        return;\r\n    }\r\n\r\n    const { nombre, fecha, hora, servicios } = cita;\r\n\r\n    // Contenedor principal\r\n    const contenedorResumen = document.createElement('DIV');\r\n    contenedorResumen.classList.add('p-6', 'space-y-6');\r\n\r\n    // Nombre del cliente\r\n    const nombreCliente = document.createElement('P');\r\n    nombreCliente.innerHTML = `<span class=\"font-bold\">Nombre:</span> ${nombre}`;\r\n    nombreCliente.classList.add('text-lg');\r\n\r\n    // Contenedor de servicios\r\n    const contenedorServicios = document.createElement('DIV');\r\n    contenedorServicios.classList.add('space-y-3');\r\n\r\n    // Título de servicios\r\n    const tituloServicios = document.createElement('H3');\r\n    tituloServicios.textContent = 'Servicios Seleccionados:';\r\n    tituloServicios.classList.add('font-bold', 'text-lg', 'mb-3');\r\n    contenedorServicios.appendChild(tituloServicios);\r\n\r\n    // Iterando y mostrando los servicios\r\n    servicios.forEach(servicio => {\r\n        const { nombre_servicio, precio } = servicio;\r\n        const servicioParrafo = document.createElement('P');\r\n        // Formatear el precio en formato CLP\r\n        const precioFormateado = new Intl.NumberFormat('es-CL', {\r\n            style: 'currency',\r\n            currency: 'CLP'\r\n        }).format(precio);\r\n        servicioParrafo.textContent = `${nombre_servicio} - ${precioFormateado}`;\r\n        contenedorServicios.appendChild(servicioParrafo);\r\n    });\r\n\r\n    // Modificar la parte de formateo de fecha\r\n    const [año, mes, dia] = fecha.split('-');\r\n    \r\n    // Crear la fecha sin UTC\r\n    const fechaObj = new Date(año, mes - 1, dia);\r\n    \r\n    const opciones = { \r\n        weekday: 'long', \r\n        year: 'numeric', \r\n        month: 'long', \r\n        day: 'numeric'\r\n    };\r\n    \r\n    const fechaFormateada = fechaObj.toLocaleDateString('es-CL', opciones);\r\n    const fechaCapitalizada = fechaFormateada.charAt(0).toUpperCase() + fechaFormateada.slice(1);\r\n\r\n    const fechaCita = document.createElement('P');\r\n    fechaCita.innerHTML = `<span class=\"font-bold\">Fecha:</span> ${fechaCapitalizada}`;\r\n    fechaCita.classList.add('text-lg');\r\n\r\n    const horaCita = document.createElement('P');\r\n    horaCita.innerHTML = `<span class=\"font-bold\">Hora:</span> ${hora} hrs`;\r\n    horaCita.classList.add('text-lg');\r\n\r\n    // Calcular y mostrar el total\r\n    const total = servicios.reduce((total, servicio) => total + parseFloat(servicio.precio), 0);\r\n    const totalFormateado = new Intl.NumberFormat('es-CL', {\r\n        style: 'currency',\r\n        currency: 'CLP'\r\n    }).format(total);\r\n    \r\n    const totalParrafo = document.createElement('P');\r\n    totalParrafo.innerHTML = `<span class=\"font-bold\">Total:</span> ${totalFormateado}`;\r\n    totalParrafo.classList.add('text-lg', 'mt-6');\r\n\r\n    // Agregar al contenedor principal\r\n    contenedorResumen.appendChild(nombreCliente);\r\n    contenedorResumen.appendChild(contenedorServicios);\r\n    contenedorResumen.appendChild(fechaCita);\r\n    contenedorResumen.appendChild(horaCita);\r\n    contenedorResumen.appendChild(totalParrafo);\r\n\r\n    // Agregar al resumen\r\n    resumen.appendChild(contenedorResumen);\r\n\r\n    // Habilitar el botón de confirmar si estamos en el paso 3\r\n    if(paso === 3) {\r\n        const btnSiguiente = document.querySelector('#siguiente');\r\n        if(btnSiguiente) {\r\n            btnSiguiente.classList.remove('opacity-50');\r\n            btnSiguiente.disabled = false;\r\n        }\r\n    }\r\n}\r\n\r\n// ... Resto de las funciones existentes ..."]}