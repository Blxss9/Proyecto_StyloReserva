{"version":3,"sources":["app.js"],"names":["paso","pasoInicial","pasoFinal","cita","id","nombre","fecha","hora","servicios","iniciarApp","mostrarSeccion","tabs","botonesPaginador","paginaSiguiente","paginaAnterior","consultarAPI","idCliente","nombreCliente","seleccionarFecha","seleccionarHora","mostrarResumen","async","url","respuesta","fetch","resultado","json","error","console","mostrarAlerta","mostrarServicios","contenedorServicios","document","querySelector","innerHTML","forEach","servicio","nombre_servicio","precio","precioFormateado","parseInt","toLocaleString","servicioDiv","createElement","classList","add","dataset","idServicio","onclick","seleccionarServicio","appendChild","btnSiguiente","addEventListener","validarServicios","validarFecha","btnAnterior","disabled","remove","textContent","seccionAnterior","pasoSelector","seccion","tabAnterior","tab","progreso","style","width","mensaje","tipo","Swal","alert","fire","icon","title","text","querySelectorAll","boton","e","pasoSeleccionado","target","length","value","validarResumen","Object","values","includes","divServicio","some","agregado","filter","inputId","inputNombre","inputFecha","horasDisponibles","hoy","Date","fechaMinima","getFullYear","getMonth","toString","padStart","getDate","min","fechaSeleccionada","dia","getUTCDay","mostrarHorasDisponibles","horas","mañana","tarde","noche","periodo","contenedor","type","btn","this","split","resumen","firstChild","removeChild","contenedorResumen","tituloServicios","servicioParrafo","Intl","NumberFormat","currency","format","fechaFormateada","toLocaleDateString","weekday","year","month","day","fechaCapitalizada","charAt","toUpperCase","slice","fechaCita","horaCita","total","reduce","parseFloat","totalFormateado","totalParrafo"],"mappings":"AAAA,IAAAA,KAAA,EACA,MAAAC,YAAA,EACAC,UAAA,EAEAC,KAAA,CACAC,GAAA,GACAC,OAAA,GACAC,MAAA,GACAC,KAAA,GACAC,UAAA,IAOA,SAAAC,aACAC,iBACAC,OACAC,mBACAC,kBACAC,iBAEAC,eAEAC,YACAC,gBACAC,mBACAC,kBAEAC,iBAGAC,eAAAN,eACA,IACA,MAAAO,EAAA,iBACAC,QAAAC,MAAAF,GACAG,QAAAF,EAAAG,OAEAD,EAAAE,OAGAC,QAAAD,MAAAF,EAAAE,OACAE,cAAA,gCAAA,UAHAC,iBAAAL,GAMA,MAAAE,GACAC,QAAAD,MAAAA,GACAE,cAAA,gCAAA,UAIA,SAAAC,iBAAAtB,GACA,MAAAuB,EAAAC,SAAAC,cAAA,cAEAF,GAMAA,EAAAG,UAAA,GAEA1B,EAAA2B,QAAAC,IACA,MAAAhC,GAAAA,EAAAiC,gBAAAA,EAAAC,OAAAA,GAAAF,EAGAG,EAAAC,SAAAF,GAAAG,eAAA,SAEAC,EAAAV,SAAAW,cAAA,OACAD,EAAAE,UAAAC,IAAA,YACAH,EAAAI,QAAAC,WAAA3C,EAEAsC,EAAAR,UAAA,4CACAG,kDACAE,kBAGAG,EAAAM,QAAA,IAAAC,oBAAAb,GAEAL,EAAAmB,YAAAR,MAxBAd,QAAAD,MAAA,wCA4BA,SAAAd,kBACA,MAAAsC,EAAAnB,SAAAC,cAAA,cAEAkB,GAEAA,EAAAC,iBAAA,QAAA,KACApD,MAxFA,IA0FA,IAAAA,MAEAqD,sBAGA,IAAArD,MAEAsD,kBAGAtD,OACAU,iBACAE,mBAGAQ,oBAIA,SAAAN,iBACA,MAAAyC,EAAAvB,SAAAC,cAAA,aAEAsB,GAEAA,EAAAH,iBAAA,QAAA,KACApD,MApHA,IAsHAA,OACAU,iBACAE,sBAIA,SAAAA,mBACA,MAAA2C,EAAAvB,SAAAC,cAAA,aACAkB,EAAAnB,SAAAC,cAAA,cAEAsB,GAAAJ,IAEA,IAAAnD,MACAuD,EAAAX,UAAAC,IAAA,cACAU,EAAAC,UAAA,IAEAD,EAAAX,UAAAa,OAAA,cACAF,EAAAC,UAAA,GAGA,IAAAxD,MACAmD,EAAAP,UAAAC,IAAA,cACAM,EAAAO,YAAA,YACAP,EAAAK,UAAA,IAEAL,EAAAP,UAAAa,OAAA,cACAN,EAAAK,UAAA,EACAL,EAAAO,YAAA,gBAIA,SAAAhD,iBAEA,MAAAiD,EAAA3B,SAAAC,cAAA,yBACA0B,GACAA,EAAAf,UAAAC,IAAA,UAIA,MAAAe,EAAA,SAAA5D,KACA6D,EAAA7B,SAAAC,cAAA2B,GACAC,GACAA,EAAAjB,UAAAa,OAAA,UAIA,MAAAK,EAAA9B,SAAAC,cAAA,4BACA6B,IACAA,EAAAlB,UAAAa,OAAA,cAAA,cACAK,EAAAlB,UAAAC,IAAA,cAAA,kBAIA,MAAAkB,EAAA/B,SAAAC,cAAA,eAAAjC,UACA+D,IACAA,EAAAnB,UAAAa,OAAA,cAAA,iBACAM,EAAAnB,UAAAC,IAAA,cAAA,eAIA,MAAAmB,EAAAhC,SAAAC,cAAA,aACA+B,IACAA,EAAAC,MAAAC,MAAAlE,KAnLA,EAmLA,IAAA,KAIA,SAAA6B,cAAAsC,EAAAC,GACA,GAAA,oBAAAC,KAGA,OAFAzC,QAAAD,MAAA,oCACA2C,MAAAH,GAIAE,KAAAE,KAAA,CACAC,KAAAJ,EACAK,MAAA,UAAAL,EAAA,QAAA,QACAM,KAAAP,IAIA,SAAAxD,OACAqB,SAAA2C,iBAAA,gBACAxC,QAAAyC,IACAA,EAAAxB,iBAAA,SAAA,SAAAyB,GACA,MAAAC,EAAAtC,SAAAqC,EAAAE,OAAAjC,QAAA9C,MAGA,GAAA8E,EAAA9E,KAIA,OAHAA,KAAA8E,EACApE,sBACAE,oBAKA,IAAAZ,MAAAqD,sBAIA,IAAArD,MAAAsD,kBAKAwB,EAAA9E,MAAA,GACAA,KAAA8E,EACApE,iBACAE,oBAGAiB,cAAA,yCAAA,eAMA,SAAAwB,mBACA,OAAA,IAAAlD,KAAAK,UAAAwE,SACAnD,cAAA,yCAAA,UACA,GAKA,SAAAyB,eAGA,QAAA,KAFAtB,SAAAC,cAAA,UAAAgD,QAEA9E,KAAAI,QACAsB,cAAA,iCAAA,UACA,GAMA,SAAAqD,iBAEA,OADAC,OAAAC,OAAAjF,MACAkF,SAAA,MACAxD,cAAA,6BAAA,UACA,GAKA,SAAAoB,oBAAAb,GACA,MAAAhC,GAAAA,GAAAgC,GACA5B,UAAAA,GAAAL,KAGAmF,EAAAtD,SAAAC,cAAA,sBAAA7B,OAGAI,EAAA+E,KAAAC,GAAAA,EAAApF,KAAAA,IAEAD,KAAAK,UAAAA,EAAAiF,OAAAD,GAAAA,EAAApF,KAAAA,GACAkF,EAAA1C,UAAAa,OAAA,kBAGAtD,KAAAK,UAAA,IAAAA,EAAA4B,GACAkD,EAAA1C,UAAAC,IAAA,iBAIAzB,iBAIA,SAAAJ,YAEA,MAAA0E,EAAA1D,SAAAC,cAAA,OACAyD,IACAvF,KAAAC,GAAAsF,EAAAT,OAIA,SAAAhE,gBAEA,MAAA0E,EAAA3D,SAAAC,cAAA,WACA0D,IACAxF,KAAAE,OAAAsF,EAAAV,OAIA,SAAA/D,mBACA,MAAA0E,EAAA5D,SAAAC,cAAA,UACA4D,EAAA7D,SAAAC,cAAA,sBAEA,IAAA2D,IAAAC,EAEA,YADAjE,QAAAD,MAAA,8CAKA,MAAAmE,EAAA,IAAAC,KAIAC,EAAA,GAHAF,EAAAG,kBACAH,EAAAI,WAAA,GAAAC,WAAAC,SAAA,EAAA,QACAN,EAAAO,UAAAF,WAAAC,SAAA,EAAA,OAGAR,EAAAU,IAAAN,EAEAJ,EAAAxC,iBAAA,SAAA,SAAAyB,GACA,MAAA0B,EAAA,IAAAR,KAAAlB,EAAAE,OAAAE,MAAA,aAGA,GAAAsB,EAFA,IAAAR,KAAAC,EAAA,aAGAnB,EAAAE,OAAAE,MAAA,GACApD,cAAA,uCAAA,SACAgE,EAAAjD,UAAAC,IAAA,UACA1C,KAAAG,MAAA,GACAH,KAAAI,KAAA,OACA,CACA,MAAAiG,EAAAD,EAAAE,YAEA,CAAA,EAAA,GAAApB,SAAAmB,IACA3B,EAAAE,OAAAE,MAAA,GACApD,cAAA,gCAAA,SACAgE,EAAAjD,UAAAC,IAAA,UACA1C,KAAAG,MAAA,GACAH,KAAAI,KAAA,KAEAJ,KAAAG,MAAAuE,EAAAE,OAAAE,MACAyB,2BAIAtF,oBAIA,SAAAsF,0BACA,MAAAb,EAAA7D,SAAAC,cAAA,sBAEA,IAAA4D,EAEA,YADAjE,QAAAD,MAAA,qDAIAkE,EAAAjD,UAAAa,OAAA,UAGA,MAAAkD,EAAA,CACAC,SAAA,CAAA,QAAA,QAAA,SACAC,MAAA,CAAA,QAAA,QAAA,QAAA,QAAA,SACAC,MAAA,CAAA,QAAA,UAIA,CAAA,SAAA,QAAA,SAAA3E,QAAA4E,IACA,MAAAC,EAAAhF,SAAAC,cAAA,UAAA8E,GACAC,GAKAA,EAAA9E,UAAA,GAEAyE,EAAAI,GAAA5E,QAAA5B,IACA,MAAAqE,EAAA5C,SAAAW,cAAA,UACAiC,EAAAqC,KAAA,SACArC,EAAAhC,UAAAC,IAAA,OAAA,OAAA,UAAA,SAAA,UAAA,oBAAA,oBAEA1C,KAAAI,OAAAA,GACAqE,EAAAhC,UAAAC,IAAA,cAAA,cAGA+B,EAAAlB,YAAAnD,EAEAqE,EAAA5B,QAAA,WACAhB,SAAA2C,iBAAA,yBAAAxC,QAAA+E,IACAA,EAAAtE,UAAAa,OAAA,cAAA,gBAGA0D,KAAAvE,UAAAC,IAAA,cAAA,cACA1C,KAAAI,KAAAA,EAGAa,kBAGA4F,EAAA9D,YAAA0B,MA7BAhD,QAAAD,MAAA,qCAAAoF,KAkCA,SAAA5F,kBACAa,SAAAC,cAAA,SACAmB,iBAAA,SAAA,SAAAyB,GACA,MACAtE,EADAsE,EAAAE,OAAAE,MACAmC,MAAA,KAAA,GACA7G,EAAA,IAAAA,EAAA,IACAsE,EAAAE,OAAAE,MAAA,GACApD,cAAA,iBAAA,UAEA1B,KAAAI,KAAAsE,EAAAE,OAAAE,SAKA,SAAA7D,iBACA,MAAAiG,EAAArF,SAAAC,cAAA,iBAGA,KAAAoF,EAAAC,YACAD,EAAAE,YAAAF,EAAAC,YAIA,GAAAnC,OAAAC,OAAAjF,MAAAkF,SAAA,KAAA,IAAAlF,KAAAK,UAAAwE,OACA,OAGA,MAAA3E,OAAAA,EAAAC,MAAAA,EAAAC,KAAAA,EAAAC,UAAAA,GAAAL,KAGAqH,EAAAxF,SAAAW,cAAA,OACA6E,EAAA5E,UAAAC,IAAA,MAAA,aAGA,MAAA5B,EAAAe,SAAAW,cAAA,KACA1B,EAAAiB,UAAA,0CAAA7B,EACAY,EAAA2B,UAAAC,IAAA,WAGA,MAAAd,EAAAC,SAAAW,cAAA,OACAZ,EAAAa,UAAAC,IAAA,aAGA,MAAA4E,EAAAzF,SAAAW,cAAA,MACA8E,EAAA/D,YAAA,2BACA+D,EAAA7E,UAAAC,IAAA,YAAA,UAAA,QACAd,EAAAmB,YAAAuE,GAGAjH,EAAA2B,QAAAC,IACA,MAAAC,gBAAAA,EAAAC,OAAAA,GAAAF,EACAsF,EAAA1F,SAAAW,cAAA,KAEAJ,EAAA,IAAAoF,KAAAC,aAAA,QAAA,CACA3D,MAAA,WACA4D,SAAA,QACAC,OAAAxF,GACAoF,EAAAhE,YAAA,GAAArB,OAAAE,IACAR,EAAAmB,YAAAwE,KAIA,MAOAK,EAPA,IAAAhC,KAAAzF,GAOA0H,mBAAA,QANA,CACAC,QAAA,OACAC,KAAA,UACAC,MAAA,OACAC,IAAA,YAIAC,EAAAN,EAAAO,OAAA,GAAAC,cAAAR,EAAAS,MAAA,GAEAC,EAAAzG,SAAAW,cAAA,KACA8F,EAAAvG,UAAA,yCAAAmG,EACAI,EAAA7F,UAAAC,IAAA,WAEA,MAAA6F,EAAA1G,SAAAW,cAAA,KACA+F,EAAAxG,UAAA,wCAAA3B,QACAmI,EAAA9F,UAAAC,IAAA,WAGA,MAAA8F,EAAAnI,EAAAoI,OAAA,CAAAD,EAAAvG,IAAAuG,EAAAE,WAAAzG,EAAAE,QAAA,GACAwG,EAAA,IAAAnB,KAAAC,aAAA,QAAA,CACA3D,MAAA,WACA4D,SAAA,QACAC,OAAAa,GAEAI,EAAA/G,SAAAW,cAAA,KACAoG,EAAA7G,UAAA,yCAAA4G,EACAC,EAAAnG,UAAAC,IAAA,UAAA,QAGA2E,EAAAtE,YAAAjC,GACAuG,EAAAtE,YAAAnB,GACAyF,EAAAtE,YAAAuF,GACAjB,EAAAtE,YAAAwF,GACAlB,EAAAtE,YAAA6F,GAGA1B,EAAAnE,YAAAsE,GA5eAxF,SAAAoB,iBAAA,oBAAA,WACA3C","file":"app.js","sourcesContent":["let paso = 1;\r\nconst pasoInicial = 1;\r\nconst pasoFinal = 4;\r\n\r\nconst cita = {\r\n    id: '',\r\n    nombre: '',\r\n    fecha: '',\r\n    hora: '',\r\n    servicios: []\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    iniciarApp();\r\n});\r\n\r\nfunction iniciarApp() {\r\n    mostrarSeccion(); // Muestra y oculta las secciones\r\n    tabs(); // Cambia la sección cuando se presionen los tabs\r\n    botonesPaginador(); // Agrega o quita los botones del paginador\r\n    paginaSiguiente();\r\n    paginaAnterior();\r\n    \r\n    consultarAPI(); // Consulta la API en el backend de PHP\r\n    \r\n    idCliente(); // Añade el id del cliente al objeto de cita\r\n    nombreCliente(); // Añade el nombre del cliente al objeto de cita\r\n    seleccionarFecha(); // Añade la fecha de la cita en el objeto\r\n    seleccionarHora(); // Añade la hora de la cita en el objeto\r\n    \r\n    mostrarResumen(); // Muestra el resumen de la cita\r\n}\r\n\r\nasync function consultarAPI() {\r\n    try {\r\n        const url = '/api/servicios';\r\n        const respuesta = await fetch(url);\r\n        const resultado = await respuesta.json();\r\n        \r\n        if(!resultado.error) {\r\n            mostrarServicios(resultado);\r\n        } else {\r\n            console.error(resultado.error);\r\n            mostrarAlerta('Error al cargar los servicios', 'error');\r\n        }\r\n        \r\n    } catch (error) {\r\n        console.error(error);\r\n        mostrarAlerta('Error al cargar los servicios', 'error');\r\n    }\r\n}\r\n\r\nfunction mostrarServicios(servicios) {\r\n    const contenedorServicios = document.querySelector('#servicios');\r\n    \r\n    if(!contenedorServicios) {\r\n        console.error('El contenedor de servicios no existe');\r\n        return;\r\n    }\r\n    \r\n    // Limpiar el HTML previo\r\n    contenedorServicios.innerHTML = '';\r\n    \r\n    servicios.forEach(servicio => {\r\n        const { id, nombre_servicio, precio } = servicio;\r\n\r\n        // Formatear el precio como número entero\r\n        const precioFormateado = parseInt(precio).toLocaleString('es-CL');\r\n\r\n        const servicioDiv = document.createElement('DIV');\r\n        servicioDiv.classList.add('servicio');\r\n        servicioDiv.dataset.idServicio = id;\r\n\r\n        servicioDiv.innerHTML = `\r\n            <p class=\"nombre-servicio\">${nombre_servicio}</p>\r\n            <p class=\"precio-servicio\">$${precioFormateado}</p>\r\n        `;\r\n\r\n        servicioDiv.onclick = () => seleccionarServicio(servicio);\r\n\r\n        contenedorServicios.appendChild(servicioDiv);\r\n    });\r\n}\r\n\r\nfunction paginaSiguiente() {\r\n    const btnSiguiente = document.querySelector('#siguiente');\r\n    \r\n    if(!btnSiguiente) return;\r\n    \r\n    btnSiguiente.addEventListener('click', () => {\r\n        if(paso >= pasoFinal) return;\r\n        \r\n        if(paso === 1) {\r\n            // Validar que se haya seleccionado al menos un servicio\r\n            if(!validarServicios()) return;\r\n        }\r\n        \r\n        if(paso === 2) {\r\n            // Validar que se haya seleccionado fecha y hora\r\n            if(!validarFecha()) return;\r\n        }\r\n        \r\n        paso++;\r\n        mostrarSeccion();\r\n        botonesPaginador();\r\n        \r\n        // Actualizar el resumen al cambiar de página\r\n        mostrarResumen();\r\n    });\r\n}\r\n\r\nfunction paginaAnterior() {\r\n    const btnAnterior = document.querySelector('#anterior');\r\n    \r\n    if(!btnAnterior) return;\r\n    \r\n    btnAnterior.addEventListener('click', () => {\r\n        if(paso <= pasoInicial) return;\r\n        \r\n        paso--;\r\n        mostrarSeccion();\r\n        botonesPaginador();\r\n    });\r\n}\r\n\r\nfunction botonesPaginador() {\r\n    const btnAnterior = document.querySelector('#anterior');\r\n    const btnSiguiente = document.querySelector('#siguiente');\r\n    \r\n    if(!btnAnterior || !btnSiguiente) return;\r\n\r\n    if(paso === 1) {\r\n        btnAnterior.classList.add('opacity-50');\r\n        btnAnterior.disabled = true;\r\n    } else {\r\n        btnAnterior.classList.remove('opacity-50');\r\n        btnAnterior.disabled = false;\r\n    }\r\n\r\n    if(paso === 4) {\r\n        btnSiguiente.classList.add('opacity-50');\r\n        btnSiguiente.textContent = 'Confirmar';\r\n        btnSiguiente.disabled = true;\r\n    } else {\r\n        btnSiguiente.classList.remove('opacity-50');\r\n        btnSiguiente.disabled = false;\r\n        btnSiguiente.textContent = 'Siguiente »';\r\n    }\r\n}\r\n\r\nfunction mostrarSeccion() {\r\n    // Ocultar la sección que tenga la clase de mostrar\r\n    const seccionAnterior = document.querySelector('.seccion:not(.hidden)');\r\n    if(seccionAnterior) {\r\n        seccionAnterior.classList.add('hidden');\r\n    }\r\n    \r\n    // Seleccionar la sección con el paso\r\n    const pasoSelector = `#paso-${paso}`;\r\n    const seccion = document.querySelector(pasoSelector);\r\n    if(seccion) {\r\n        seccion.classList.remove('hidden');\r\n    }\r\n    \r\n    // Quita la clase \"actual\" al tab anterior\r\n    const tabAnterior = document.querySelector('.step-button.bg-blue-500');\r\n    if(tabAnterior) {\r\n        tabAnterior.classList.remove('bg-blue-500', 'text-white');\r\n        tabAnterior.classList.add('bg-gray-300', 'text-gray-600');\r\n    }\r\n    \r\n    // Resalta el tab actual\r\n    const tab = document.querySelector(`[data-paso=\"${paso}\"]`);\r\n    if(tab) {\r\n        tab.classList.remove('bg-gray-300', 'text-gray-600');\r\n        tab.classList.add('bg-blue-500', 'text-white');\r\n    }\r\n    \r\n    // Actualizar la barra de progreso\r\n    const progreso = document.querySelector('#progress');\r\n    if(progreso) {\r\n        progreso.style.width = `${(paso / pasoFinal) * 100}%`;\r\n    }\r\n}\r\n\r\nfunction mostrarAlerta(mensaje, tipo) {\r\n    if(typeof Swal === 'undefined') {\r\n        console.error('SweetAlert2 no está cargado');\r\n        alert(mensaje);\r\n        return;\r\n    }\r\n\r\n    Swal.fire({\r\n        icon: tipo,\r\n        title: tipo === 'error' ? 'Error' : 'Éxito',\r\n        text: mensaje\r\n    });\r\n}\r\n\r\nfunction tabs() {\r\n    const botones = document.querySelectorAll('.step-button');\r\n    botones.forEach(boton => {\r\n        boton.addEventListener('click', function(e) {\r\n            const pasoSeleccionado = parseInt(e.target.dataset.paso);\r\n            \r\n            // Si intenta retroceder, permitirlo\r\n            if (pasoSeleccionado < paso) {\r\n                paso = pasoSeleccionado;\r\n                mostrarSeccion();\r\n                botonesPaginador();\r\n                return;\r\n            }\r\n\r\n            // Validaciones para avanzar\r\n            if (paso === 1 && !validarServicios()) {\r\n                return;\r\n            }\r\n\r\n            if (paso === 2 && !validarFecha()) {\r\n                return;\r\n            }\r\n\r\n            // Si todas las validaciones pasan, permitir el cambio\r\n            if (pasoSeleccionado - paso === 1) {\r\n                paso = pasoSeleccionado;\r\n                mostrarSeccion();\r\n                botonesPaginador();\r\n            } else {\r\n                // Si intenta saltar más de una sección, mostrar alerta\r\n                mostrarAlerta('Por favor, complete los pasos en orden', 'error');\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction validarServicios() {\r\n    if(cita.servicios.length === 0) {\r\n        mostrarAlerta('Debes seleccionar al menos un servicio', 'error');\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction validarFecha() {\r\n    const fecha = document.querySelector('#fecha').value;\r\n    \r\n    if(fecha === '' || !cita.hora) {\r\n        mostrarAlerta('Debes seleccionar fecha y hora', 'error');\r\n        return false;\r\n    }\r\n    \r\n    return true;\r\n}\r\n\r\nfunction validarResumen() {\r\n    const elementos = Object.values(cita);\r\n    if(elementos.includes('')) {\r\n        mostrarAlerta('Faltan datos por confirmar', 'error');\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction seleccionarServicio(servicio) {\r\n    const { id } = servicio;\r\n    const { servicios } = cita;\r\n\r\n    // Identificar el elemento clickeado\r\n    const divServicio = document.querySelector(`[data-id-servicio=\"${id}\"]`);\r\n\r\n    // Comprobar si un servicio ya fue agregado o quitarlo\r\n    if(servicios.some(agregado => agregado.id === id)) {\r\n        // Eliminarlo\r\n        cita.servicios = servicios.filter(agregado => agregado.id !== id);\r\n        divServicio.classList.remove('seleccionado');\r\n    } else {\r\n        // Agregarlo\r\n        cita.servicios = [...servicios, servicio];\r\n        divServicio.classList.add('seleccionado');\r\n    }\r\n    \r\n    // Actualizar el resumen cada vez que se selecciona o deselecciona un servicio\r\n    mostrarResumen();\r\n}\r\n\r\n// También necesitamos implementar las funciones de cliente\r\nfunction idCliente() {\r\n    // Verificar si el elemento existe antes de acceder a su valor\r\n    const inputId = document.querySelector('#id');\r\n    if(inputId) {\r\n        cita.id = inputId.value;\r\n    }\r\n}\r\n\r\nfunction nombreCliente() {\r\n    // Verificar si el elemento existe antes de acceder a su valor\r\n    const inputNombre = document.querySelector('#nombre');\r\n    if(inputNombre) {\r\n        cita.nombre = inputNombre.value;\r\n    }\r\n}\r\n\r\nfunction seleccionarFecha() {\r\n    const inputFecha = document.querySelector('#fecha');\r\n    const horasDisponibles = document.querySelector('#horas-disponibles');\r\n    \r\n    if(!inputFecha || !horasDisponibles) {\r\n        console.error('No se encontraron los elementos necesarios');\r\n        return;\r\n    }\r\n    \r\n    // Establecer la fecha mínima como hoy\r\n    const hoy = new Date();\r\n    const año = hoy.getFullYear();\r\n    const mes = (hoy.getMonth() + 1).toString().padStart(2, '0');\r\n    const dia = hoy.getDate().toString().padStart(2, '0');\r\n    const fechaMinima = `${año}-${mes}-${dia}`;\r\n    \r\n    inputFecha.min = fechaMinima;\r\n    \r\n    inputFecha.addEventListener('input', function(e) {\r\n        const fechaSeleccionada = new Date(e.target.value + 'T00:00:00');\r\n        const fechaHoy = new Date(fechaMinima + 'T00:00:00');\r\n        \r\n        if(fechaSeleccionada < fechaHoy) {\r\n            e.target.value = '';\r\n            mostrarAlerta('No puedes seleccionar fechas pasadas', 'error');\r\n            horasDisponibles.classList.add('hidden');\r\n            cita.fecha = '';\r\n            cita.hora = '';\r\n        } else {\r\n            const dia = fechaSeleccionada.getUTCDay();\r\n            \r\n            if([6, 0].includes(dia)) {\r\n                e.target.value = '';\r\n                mostrarAlerta('Fines de semana no permitidos', 'error');\r\n                horasDisponibles.classList.add('hidden');\r\n                cita.fecha = '';\r\n                cita.hora = '';\r\n            } else {\r\n                cita.fecha = e.target.value;\r\n                mostrarHorasDisponibles();\r\n            }\r\n        }\r\n        // Actualizar el resumen cuando se selecciona una fecha\r\n        mostrarResumen();\r\n    });\r\n}\r\n\r\nfunction mostrarHorasDisponibles() {\r\n    const horasDisponibles = document.querySelector('#horas-disponibles');\r\n    \r\n    if(!horasDisponibles) {\r\n        console.error('No se encontró el contenedor de horas disponibles');\r\n        return;\r\n    }\r\n    \r\n    horasDisponibles.classList.remove('hidden');\r\n\r\n    // Definir las horas disponibles por período\r\n    const horas = {\r\n        mañana: ['10:00', '10:50', '11:40'],\r\n        tarde: ['12:30', '15:00', '15:50', '16:40', '17:30'],\r\n        noche: ['18:20', '19:10']\r\n    };\r\n\r\n    // Limpiar contenedores\r\n    ['mañana', 'tarde', 'noche'].forEach(periodo => {\r\n        const contenedor = document.querySelector(`#horas-${periodo}`);\r\n        if(!contenedor) {\r\n            console.error(`No se encontró el contenedor para ${periodo}`);\r\n            return;\r\n        }\r\n        \r\n        contenedor.innerHTML = '';\r\n        \r\n        horas[periodo].forEach(hora => {\r\n            const boton = document.createElement('BUTTON');\r\n            boton.type = 'button';\r\n            boton.classList.add('px-4', 'py-2', 'text-sm', 'border', 'rounded', 'hover:bg-blue-500', 'hover:text-white');\r\n            \r\n            if(cita.hora === hora) {\r\n                boton.classList.add('bg-blue-500', 'text-white');\r\n            }\r\n            \r\n            boton.textContent = hora;\r\n            \r\n            boton.onclick = function() {\r\n                document.querySelectorAll('button[type=\"button\"]').forEach(btn => {\r\n                    btn.classList.remove('bg-blue-500', 'text-white');\r\n                });\r\n                \r\n                this.classList.add('bg-blue-500', 'text-white');\r\n                cita.hora = hora;\r\n                \r\n                // Actualizar el resumen cuando se selecciona una hora\r\n                mostrarResumen();\r\n            };\r\n            \r\n            contenedor.appendChild(boton);\r\n        });\r\n    });\r\n}\r\n\r\nfunction seleccionarHora() {\r\n    const inputHora = document.querySelector('#hora');\r\n    inputHora.addEventListener('input', function(e) {\r\n        const horaCita = e.target.value;\r\n        const hora = horaCita.split(\":\")[0];\r\n        if(hora < 10 || hora > 18) {\r\n            e.target.value = '';\r\n            mostrarAlerta('Hora no válida', 'error');\r\n        } else {\r\n            cita.hora = e.target.value;\r\n        }\r\n    });\r\n}\r\n\r\nfunction mostrarResumen() {\r\n    const resumen = document.querySelector('#resumen-cita');\r\n\r\n    // Limpiar el contenido\r\n    while(resumen.firstChild) {\r\n        resumen.removeChild(resumen.firstChild);\r\n    }\r\n\r\n    // Verificar si hay servicios seleccionados y datos completos\r\n    if(Object.values(cita).includes('') || cita.servicios.length === 0) {\r\n        return;\r\n    }\r\n\r\n    const { nombre, fecha, hora, servicios } = cita;\r\n\r\n    // Contenedor principal\r\n    const contenedorResumen = document.createElement('DIV');\r\n    contenedorResumen.classList.add('p-6', 'space-y-6');\r\n\r\n    // Nombre del cliente\r\n    const nombreCliente = document.createElement('P');\r\n    nombreCliente.innerHTML = `<span class=\"font-bold\">Nombre:</span> ${nombre}`;\r\n    nombreCliente.classList.add('text-lg');\r\n\r\n    // Contenedor de servicios\r\n    const contenedorServicios = document.createElement('DIV');\r\n    contenedorServicios.classList.add('space-y-3');\r\n\r\n    // Título de servicios\r\n    const tituloServicios = document.createElement('H3');\r\n    tituloServicios.textContent = 'Servicios Seleccionados:';\r\n    tituloServicios.classList.add('font-bold', 'text-lg', 'mb-3');\r\n    contenedorServicios.appendChild(tituloServicios);\r\n\r\n    // Iterando y mostrando los servicios\r\n    servicios.forEach(servicio => {\r\n        const { nombre_servicio, precio } = servicio;\r\n        const servicioParrafo = document.createElement('P');\r\n        // Formatear el precio en formato CLP\r\n        const precioFormateado = new Intl.NumberFormat('es-CL', {\r\n            style: 'currency',\r\n            currency: 'CLP'\r\n        }).format(precio);\r\n        servicioParrafo.textContent = `${nombre_servicio} - ${precioFormateado}`;\r\n        contenedorServicios.appendChild(servicioParrafo);\r\n    });\r\n\r\n    // Formatear la fecha\r\n    const fechaObj = new Date(fecha);\r\n    const opciones = { \r\n        weekday: 'long', \r\n        year: 'numeric', \r\n        month: 'long', \r\n        day: 'numeric'\r\n    };\r\n    const fechaFormateada = fechaObj.toLocaleDateString('es-CL', opciones);\r\n    // Capitalizar primera letra\r\n    const fechaCapitalizada = fechaFormateada.charAt(0).toUpperCase() + fechaFormateada.slice(1);\r\n\r\n    const fechaCita = document.createElement('P');\r\n    fechaCita.innerHTML = `<span class=\"font-bold\">Fecha:</span> ${fechaCapitalizada}`;\r\n    fechaCita.classList.add('text-lg');\r\n\r\n    const horaCita = document.createElement('P');\r\n    horaCita.innerHTML = `<span class=\"font-bold\">Hora:</span> ${hora} hrs`;\r\n    horaCita.classList.add('text-lg');\r\n\r\n    // Calcular y mostrar el total\r\n    const total = servicios.reduce((total, servicio) => total + parseFloat(servicio.precio), 0);\r\n    const totalFormateado = new Intl.NumberFormat('es-CL', {\r\n        style: 'currency',\r\n        currency: 'CLP'\r\n    }).format(total);\r\n    \r\n    const totalParrafo = document.createElement('P');\r\n    totalParrafo.innerHTML = `<span class=\"font-bold\">Total:</span> ${totalFormateado}`;\r\n    totalParrafo.classList.add('text-xl', 'mt-6');\r\n\r\n    // Agregar al contenedor principal\r\n    contenedorResumen.appendChild(nombreCliente);\r\n    contenedorResumen.appendChild(contenedorServicios);\r\n    contenedorResumen.appendChild(fechaCita);\r\n    contenedorResumen.appendChild(horaCita);\r\n    contenedorResumen.appendChild(totalParrafo);\r\n\r\n    // Agregar al resumen\r\n    resumen.appendChild(contenedorResumen);\r\n}\r\n\r\n// ... Resto de las funciones existentes ..."]}