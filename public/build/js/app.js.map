{"version":3,"sources":["app.js"],"names":["paso","pasoInicial","pasoFinal","cita","id","nombre","fecha","hora","servicios","cargarDatosGuardados","citaGuardada","localStorage","getItem","pasoGuardado","citaObj","JSON","parse","Object","assign","parseInt","mostrarSeccion","mostrarResumen","iniciarApp","tabs","botonesPaginador","paginaSiguiente","paginaAnterior","consultarAPI","idCliente","nombreCliente","seleccionarFecha","seleccionarHora","async","url","respuesta","fetch","resultado","json","error","console","mostrarAlerta","mostrarServicios","contenedorServicios","document","querySelector","innerHTML","forEach","servicio","nombre_servicio","precio","tiempo_estimado","precioFormateado","toLocaleString","tiempoFormateado","formatearTiempo","servicioDiv","createElement","classList","add","dataset","idServicio","some","servicioGuardado","onclick","seleccionarServicio","appendChild","btnSiguiente","addEventListener","validarServicios","validarFecha","btnAnterior","remove","disabled","textContent","seccionAnterior","pasoSelector","seccion","tabAnterior","tab","progreso","style","width","setItem","mensaje","tipo","Swal","alert","fire","icon","title","text","querySelectorAll","boton","e","pasoSeleccionado","target","actualizarBotonConfirmar","metodoPagoSeleccionado","botonConfirmar","getElementById","option","check","checked","input","metodoPago","value","html","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","allowOutsideClick","allowEscapeKey","isConfirmed","datos","FormData","append","map","method","body","removeItem","then","window","location","href","length","validarResumen","values","includes","divServicio","agregado","filter","stringify","inputId","inputNombre","inputFecha","horasDisponibles","hoy","Date","año","getFullYear","mes","getMonth","toString","padStart","dia","getDate","fechaMinima","min","mostrarHorasDisponibles","añoSel","mesSel","diaSel","split","fechaSeleccionada","getDay","horas","mañana","tarde","noche","periodo","contenedor","type","btn","this","minutos","Math","floor","minutosRestantes","resumen","firstChild","removeChild","mensajeError","contenedorResumen","tituloServicios","tiempoTotal","precioTotal","servicioParrafo","parseFloat","Intl","NumberFormat","currency","format","tiempoTotalParrafo","tiempoTotalFormateado","fechaFormateada","toLocaleDateString","weekday","year","month","day","fechaCapitalizada","charAt","toUpperCase","slice","fechaCita","horaCita","totalFormateado","totalParrafo"],"mappings":"AAAA,IAAAA,KAAA,EACA,MAAAC,YAAA,EACAC,UAAA,EAEAC,KAAA,CACAC,GAAA,GACAC,OAAA,GACAC,MAAA,GACAC,KAAA,GACAC,UAAA,IAGA,SAAAC,uBACA,MAAAC,EAAAC,aAAAC,QAAA,QACAC,EAAAF,aAAAC,QAAA,QAEA,GAAAF,EAAA,CACA,MAAAI,EAAAC,KAAAC,MAAAN,GACAO,OAAAC,OAAAf,KAAAW,GAGAD,IACAb,KAAAmB,SAAAN,GACAO,iBACAC,kBASA,SAAAC,aACAF,iBACAG,OACAC,mBACAC,kBACAC,iBAEAC,eAEAC,YACAC,gBACAC,mBACAC,kBAGAC,eAAAL,eACA,IACA,MAAAM,EAAA,iBACAC,QAAAC,MAAAF,GACAG,QAAAF,EAAAG,OAEAD,EAAAE,OAGAC,QAAAD,MAAAF,EAAAE,OACAE,cAAA,gCAAA,UAHAC,iBAAAL,GAMA,MAAAE,GACAC,QAAAD,MAAAA,GACAE,cAAA,gCAAA,UAIA,SAAAC,iBAAAjC,GACA,MAAAkC,EAAAC,SAAAC,cAAA,cAEAF,GAMAA,EAAAG,UAAA,GAEArC,EAAAsC,QAAAC,IACA,MAAA3C,GAAAA,EAAA4C,gBAAAA,EAAAC,OAAAA,EAAAC,gBAAAA,GAAAH,EACAI,EAAAhC,SAAA8B,GAAAG,eAAA,SACAC,EAAAC,gBAAAnC,SAAA+B,IAEAK,EAAAZ,SAAAa,cAAA,OACAD,EAAAE,UAAAC,IAAA,YACAH,EAAAI,QAAAC,WAAAxD,EAGAD,KAAAK,UAAAqD,KAAAC,GAAAA,EAAA1D,KAAAA,IAEAmD,EAAAE,UAAAC,IAAA,gBAGAH,EAAAV,UAAA,4CACAG,kDACAG,iFACAE,kBAGAE,EAAAQ,QAAA,IAAAC,oBAAAjB,GAEAL,EAAAuB,YAAAV,MA9BAhB,QAAAD,MAAA,wCAkCA,SAAAb,kBACA,MAAAyC,EAAAvB,SAAAC,cAAA,cAEAsB,GAEAA,EAAAC,iBAAA,QAAA,KACAnE,MA7GA,IA+GA,IAAAA,MAEAoE,sBAGA,IAAApE,MAEAqE,kBAGArE,OACAoB,iBACAI,mBAGAH,oBAIA,SAAAK,iBACA,MAAA4C,EAAA3B,SAAAC,cAAA,aAEA0B,GAEAA,EAAAH,iBAAA,QAAA,KACAnE,MAzIA,IA2IAA,OACAoB,iBACAI,sBAIA,SAAAA,mBACA,MAAA8C,EAAA3B,SAAAC,cAAA,aACAsB,EAAAvB,SAAAC,cAAA,cAEA0B,GAAAJ,IAEA,IAAAlE,KAEAsE,EAAAb,UAAAC,IAAA,WAEAY,EAAAb,UAAAc,OAAA,UACAD,EAAAb,UAAAc,OAAA,cACAD,EAAAE,UAAA,GAGA,IAAAxE,KAEAkE,EAAAT,UAAAC,IAAA,WAEAQ,EAAAT,UAAAc,OAAA,UACAL,EAAAT,UAAAc,OAAA,cACAL,EAAAM,UAAA,EACAN,EAAAO,YAAA,gBAIA,SAAArD,iBAEA,MAAAsD,EAAA/B,SAAAC,cAAA,yBACA8B,GACAA,EAAAjB,UAAAC,IAAA,UAIA,MAAAiB,EAAA,SAAA3E,KACA4E,EAAAjC,SAAAC,cAAA+B,GACAC,GACAA,EAAAnB,UAAAc,OAAA,UAIA,MAAAM,EAAAlC,SAAAC,cAAA,4BACAiC,IACAA,EAAApB,UAAAc,OAAA,cAAA,cACAM,EAAApB,UAAAC,IAAA,cAAA,kBAIA,MAAAoB,EAAAnC,SAAAC,cAAA,eAAA5C,UACA8E,IACAA,EAAArB,UAAAc,OAAA,cAAA,iBACAO,EAAArB,UAAAC,IAAA,cAAA,eAIA,MAAAqB,EAAApC,SAAAC,cAAA,aACAmC,IACAA,EAAAC,MAAAC,MAAAjF,KAzMA,EAyMA,IAAA,KAGAW,aAAAuE,QAAA,OAAAlF,MAGA,SAAAwC,cAAA2C,EAAAC,GACA,GAAA,oBAAAC,KAGA,OAFA9C,QAAAD,MAAA,oCACAgD,MAAAH,GAIAE,KAAAE,KAAA,CACAC,KAAAJ,EACAK,MAAA,UAAAL,EAAA,QAAA,QACAM,KAAAP,IAIA,SAAA5D,OACAoB,SAAAgD,iBAAA,gBACA7C,QAAA8C,IACAA,EAAAzB,iBAAA,SAAA,SAAA0B,GACA,MAAAC,EAAA3E,SAAA0E,EAAAE,OAAApC,QAAA3D,MAGA,GAAA8F,EAAA9F,KAIA,OAHAA,KAAA8F,EACA1E,sBACAI,oBAKA,IAAAxB,MAAAoE,sBAIA,IAAApE,MAAAqE,kBAKAyB,EAAA9F,MAAA,GACAA,KAAA8F,EACA1E,iBACAI,oBAGAgB,cAAA,yCAAA,eAMA,SAAAwD,2BACA,MAAAC,EAAAtD,SAAAC,cAAA,wCACAsD,EAAAvD,SAAAwD,eAAA,kBAEAD,EAAA1B,UAAAyB,EAGAtD,SAAAgD,iBAAA,mBAAA7C,QAAAsD,IACA,MAAAC,EAAAD,EAAAxD,cAAA,kBACAwD,EAAAxD,cAAA,SAAA0D,SACAD,EAAA5C,UAAAC,IAAA,eACA0C,EAAAxD,cAAA,SAAAa,UAAAC,IAAA,qBAEA2C,EAAA5C,UAAAc,OAAA,eACA6B,EAAAxD,cAAA,SAAAa,UAAAc,OAAA,sBAKA2B,EAAAnC,QAAA/B,UAEAkE,EAAA1B,UAAA,EACA0B,EAAAzB,YAAA,gBAGA9B,SAAAgD,iBAAA,gCAAA7C,QAAAyD,IACAA,EAAA/B,UAAA,IAGA,MAAAgC,EAAA7D,SAAAC,cAAA,wCAAA6D,MAEA,GAAA,UAAAD,EACA,IAoBA,UAlBAnB,KAAAE,KAAA,CACAE,MAAA,mBACAiB,KAAA,4SAMAlB,KAAA,WACAmB,kBAAA,EACAC,mBAAA,UACAC,kBAAA,OACAC,kBAAA,cACAC,iBAAA,WACAC,mBAAA,EACAC,gBAAA,KAGAC,YAAA,CAEA,MAAAC,EAAA,IAAAC,SACAD,EAAAE,OAAA,QAAAlH,KAAAG,OACA6G,EAAAE,OAAA,OAAAlH,KAAAI,MACA4G,EAAAE,OAAA,YAAAlH,KAAAC,IACA+G,EAAAE,OAAA,YAAAlH,KAAAK,UAAA8G,IAAAvE,GAAAA,EAAA3C,KACA+G,EAAAE,OAAA,OAAAb,GACAW,EAAAE,OAAA,SAAA,aAGA,MAAApF,EAAA,aACAC,QAAAC,MAAAF,EAAA,CACAsF,OAAA,OACAC,KAAAL,WAEAjF,EAAAG,QAEAD,YAEAzB,aAAA8G,WAAA,QACA9G,aAAA8G,WAAA,QAEApC,KAAAE,KAAA,CACAC,KAAA,UACAC,MAAA,oBACAC,KAAA,yCACAoB,kBAAA,KACAE,mBAAA,EACAC,gBAAA,IACAS,KAAA,KACAC,OAAAC,SAAAC,KAAA,YAKA3B,EAAA1B,UAAA,EACA0B,EAAAzB,YAAA,iBACA9B,SAAAgD,iBAAA,gCAAA7C,QAAAyD,IACAA,EAAA/B,UAAA,IAGA,MAAAlC,GACAC,QAAAD,MAAAA,GACA+C,KAAAE,KAAA,CACAC,KAAA,QACAC,MAAA,QACAC,KAAA,mCACAoB,kBAAA,KACAE,mBAAA,EACAC,gBAAA,IACAS,KAAA,KAEAxB,EAAA1B,UAAA,EACA0B,EAAAzB,YAAA,iBACA9B,SAAAgD,iBAAA,gCAAA7C,QAAAyD,IACAA,EAAA/B,UAAA,UAIA,WAAAgC,GAEA7D,SAAAC,cAAA,4BAAAa,UAAAc,OAAA,WAKA,SAAAH,mBACA,OAAA,IAAAjE,KAAAK,UAAAsH,SACAtF,cAAA,yCAAA,UACA,GAKA,SAAA6B,eAGA,QAAA,KAFA1B,SAAAC,cAAA,UAAA6D,QAEAtG,KAAAI,QACAiC,cAAA,iCAAA,UACA,GAMA,SAAAuF,iBAEA,OADA9G,OAAA+G,OAAA7H,MACA8H,SAAA,MACAzF,cAAA,6BAAA,UACA,GAKA,SAAAwB,oBAAAjB,GACA,MAAA3C,GAAAA,GAAA2C,GACAvC,UAAAA,GAAAL,KAGA+H,EAAAvF,SAAAC,cAAA,sBAAAxC,OAGAI,EAAAqD,KAAAsE,GAAAA,EAAA/H,KAAAA,IAEAD,KAAAK,UAAAA,EAAA4H,OAAAD,GAAAA,EAAA/H,KAAAA,GACA8H,EAAAzE,UAAAc,OAAA,kBAGApE,KAAAK,UAAA,IAAAA,EAAAuC,GACAmF,EAAAzE,UAAAC,IAAA,iBAGA/C,aAAAuE,QAAA,OAAAnE,KAAAsH,UAAAlI,OACAkB,iBAIA,SAAAO,YAEA,MAAA0G,EAAA3F,SAAAC,cAAA,OACA0F,IACAnI,KAAAC,GAAAkI,EAAA7B,OAIA,SAAA5E,gBAEA,MAAA0G,EAAA5F,SAAAC,cAAA,WACA2F,IACApI,KAAAE,OAAAkI,EAAA9B,OAIA,SAAA3E,mBACA,MAAA0G,EAAA7F,SAAAC,cAAA,UACA6F,EAAA9F,SAAAC,cAAA,sBAEA,IAAA4F,IAAAC,EAAA,OAGA,MAAAC,EAAA,IAAAC,KACAC,EAAAF,EAAAG,cACAC,GAAAJ,EAAAK,WAAA,GAAAC,WAAAC,SAAA,EAAA,KACAC,EAAAR,EAAAS,UAAAH,WAAAC,SAAA,EAAA,KACAG,EAAA,GAAAR,KAAAE,KAAAI,IAEAV,EAAAa,IAAAD,EAGAjJ,KAAAG,QACAkI,EAAA/B,MAAAtG,KAAAG,MACAgJ,2BAGAd,EAAArE,iBAAA,SAAA,SAAA0B,GACA,MAAA0D,EAAAC,EAAAC,GAAA5D,EAAAE,OAAAU,MAAAiD,MAAA,KACAC,EAAA,IAAAhB,KAAAY,EAAAC,EAAA,EAAAC,GAGA,GAAAE,EAFA,IAAAhB,KAAAC,EAAAE,EAAA,EAAAI,GAGArD,EAAAE,OAAAU,MAAA,GACAjE,cAAA,uCAAA,SACAiG,EAAAhF,UAAAC,IAAA,UACAvD,KAAAG,MAAA,GACAH,KAAAI,KAAA,OACA,CACA,MAAA2I,EAAAS,EAAAC,SAEA,CAAA,EAAA,GAAA3B,SAAAiB,IACArD,EAAAE,OAAAU,MAAA,GACAjE,cAAA,gCAAA,SACAiG,EAAAhF,UAAAC,IAAA,UACAvD,KAAAG,MAAA,GACAH,KAAAI,KAAA,KAEAJ,KAAAG,MAAAuF,EAAAE,OAAAU,MACA6C,2BAGAjI,iBACAV,aAAAuE,QAAA,OAAAnE,KAAAsH,UAAAlI,UAIA,SAAAmJ,0BACA,MAAAb,EAAA9F,SAAAC,cAAA,sBAEA,IAAA6F,EAEA,YADAlG,QAAAD,MAAA,qDAIAmG,EAAAhF,UAAAc,OAAA,UAGA,MAAAsF,EAAA,CACAC,SAAA,CAAA,QAAA,QAAA,SACAC,MAAA,CAAA,QAAA,QAAA,QAAA,QAAA,SACAC,MAAA,CAAA,QAAA,UAIA,CAAA,SAAA,QAAA,SAAAlH,QAAAmH,IACA,MAAAC,EAAAvH,SAAAC,cAAA,UAAAqH,GACAC,GAKAA,EAAArH,UAAA,GAEAgH,EAAAI,GAAAnH,QAAAvC,IACA,MAAAqF,EAAAjD,SAAAa,cAAA,UACAoC,EAAAuE,KAAA,SACAvE,EAAAnC,UAAAC,IAAA,OAAA,OAAA,UAAA,SAAA,UAAA,oBAAA,oBAEAvD,KAAAI,OAAAA,GACAqF,EAAAnC,UAAAC,IAAA,cAAA,cAGAkC,EAAAnB,YAAAlE,EAEAqF,EAAA7B,QAAA,WACApB,SAAAgD,iBAAA,yBAAA7C,QAAAsH,IACAA,EAAA3G,UAAAc,OAAA,cAAA,gBAGA8F,KAAA5G,UAAAC,IAAA,cAAA,cACAvD,KAAAI,KAAAA,EAEAI,aAAAuE,QAAA,OAAAnE,KAAAsH,UAAAlI,OACAkB,kBAGA6I,EAAAjG,YAAA2B,MA7BArD,QAAAD,MAAA,qCAAA2H,KAkCA,SAAAlI,kBACAY,SAAAC,cAAA,SACAuB,iBAAA,SAAA,SAAA0B,GACA,MACAtF,EADAsF,EAAAE,OAAAU,MACAiD,MAAA,KAAA,GACAnJ,EAAA,IAAAA,EAAA,IACAsF,EAAAE,OAAAU,MAAA,GACAjE,cAAA,iBAAA,UAEArC,KAAAI,KAAAsF,EAAAE,OAAAU,SAKA,SAAAnD,gBAAAgH,GACA,MAAAT,EAAAU,KAAAC,MAAAF,EAAA,IACAG,EAAAH,EAAA,GAEA,IAAAlI,EAAA,GAWA,OATAyH,EAAA,IACAzH,GAAA,GAAAyH,KAAA,IAAAA,EAAA,OAAA,WAGAY,EAAA,IACAZ,EAAA,IAAAzH,GAAA,OACAA,GAAA,GAAAqI,KAAA,IAAAA,EAAA,SAAA,aAGArI,GAAA,YAGA,SAAAf,iBACA,MAAAqJ,EAAA/H,SAAAC,cAAA,iBAEA,IAAA8H,EAAA,OAGA,KAAAA,EAAAC,YACAD,EAAAE,YAAAF,EAAAC,YAIA,GAAA1J,OAAA+G,OAAA7H,MAAA8H,SAAA,KAAA,IAAA9H,KAAAK,UAAAsH,OAAA,CACA,MAAA+C,EAAAlI,SAAAa,cAAA,KAIA,OAHAqH,EAAApH,UAAAC,IAAA,cAAA,gBAAA,QACAmH,EAAApG,YAAA,kCACAiG,EAAAzG,YAAA4G,GAIA,MAAAxK,OAAAA,EAAAC,MAAAA,EAAAC,KAAAA,EAAAC,UAAAA,GAAAL,KAGA2K,EAAAnI,SAAAa,cAAA,OACAsH,EAAArH,UAAAC,IAAA,MAAA,aAGA,MAAA7B,EAAAc,SAAAa,cAAA,KACA3B,EAAAgB,UAAA,0CAAAxC,EACAwB,EAAA4B,UAAAC,IAAA,WAGA,MAAAhB,EAAAC,SAAAa,cAAA,OACAd,EAAAe,UAAAC,IAAA,aAGA,MAAAqH,EAAApI,SAAAa,cAAA,MACAuH,EAAAtG,YAAA,2BACAsG,EAAAtH,UAAAC,IAAA,YAAA,UAAA,QACAhB,EAAAuB,YAAA8G,GAGA,IAAAC,EAAA,EACAC,EAAA,EAGAzK,EAAAsC,QAAAC,IACA,MAAAC,gBAAAA,EAAAC,OAAAA,EAAAC,gBAAAA,GAAAH,EACAmI,EAAAvI,SAAAa,cAAA,KAGAwH,GAAA7J,SAAA+B,GAEA+H,GAAAE,WAAAlI,GAGA,MAAAE,EAAA,IAAAiI,KAAAC,aAAA,QAAA,CACArG,MAAA,WACAsG,SAAA,QACAC,OAAAtI,GAGAI,EAAAC,gBAAAnC,SAAA+B,IAEAgI,EAAAzG,YAAA,GAAAzB,OAAAG,MAAAE,KACAX,EAAAuB,YAAAiH,KAIA,MAAAM,EAAA7I,SAAAa,cAAA,KACAiI,EAAAnI,gBAAA0H,GACAQ,EAAA3I,UAAA,yDAAA4I,EACAD,EAAA/H,UAAAC,IAAA,aAAA,aAAA,UAAA,QAGA,MAAAkF,EAAAE,EAAAI,GAAA5I,EAAAoJ,MAAA,KAYAgC,EATA,IAAA/C,KAAAC,EAAAE,EAAA,EAAAI,GASAyC,mBAAA,QAPA,CACAC,QAAA,OACAC,KAAA,UACAC,MAAA,OACAC,IAAA,YAIAC,EAAAN,EAAAO,OAAA,GAAAC,cAAAR,EAAAS,MAAA,GAEAC,EAAAzJ,SAAAa,cAAA,KACA4I,EAAAvJ,UAAA,yCAAAmJ,EACAI,EAAA3I,UAAAC,IAAA,WAEA,MAAA2I,EAAA1J,SAAAa,cAAA,KACA6I,EAAAxJ,UAAA,wCAAAtC,QACA8L,EAAA5I,UAAAC,IAAA,WAGA,MAAA4I,EAAA,IAAAlB,KAAAC,aAAA,QAAA,CACArG,MAAA,WACAsG,SAAA,QACAC,OAAAN,GAEAsB,EAAA5J,SAAAa,cAAA,KAgBA,GAfA+I,EAAA1J,UAAA,iDAAAyJ,EACAC,EAAA9I,UAAAC,IAAA,cAAA,MAAA,aAAA,UAAA,OAAA,eAGAoH,EAAA7G,YAAApC,GACAiJ,EAAA7G,YAAAvB,GACAoI,EAAA7G,YAAAuH,GACAV,EAAA7G,YAAAmI,GACAtB,EAAA7G,YAAAoI,GACAvB,EAAA7G,YAAAsI,GAGA7B,EAAAzG,YAAA6G,GAGA,IAAA9K,KAAA,CACA,MAAAkE,EAAAvB,SAAAC,cAAA,cACAsB,IACAA,EAAAT,UAAAc,OAAA,cACAL,EAAAM,UAAA,IAtqBA7B,SAAAwB,iBAAA,oBAAA,WACA1D,uBACAa","file":"app.js","sourcesContent":["let paso = 1;\r\nconst pasoInicial = 1;\r\nconst pasoFinal = 4;\r\n\r\nconst cita = {\r\n    id: '',\r\n    nombre: '',\r\n    fecha: '',\r\n    hora: '',\r\n    servicios: []\r\n}\r\n\r\nfunction cargarDatosGuardados() {\r\n    const citaGuardada = localStorage.getItem('cita');\r\n    const pasoGuardado = localStorage.getItem('paso');\r\n    \r\n    if (citaGuardada) {\r\n        const citaObj = JSON.parse(citaGuardada);\r\n        Object.assign(cita, citaObj);\r\n    }\r\n    \r\n    if (pasoGuardado) {\r\n        paso = parseInt(pasoGuardado);\r\n        mostrarSeccion();\r\n        mostrarResumen();\r\n    }\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    cargarDatosGuardados();\r\n    iniciarApp();\r\n});\r\n\r\nfunction iniciarApp() {\r\n    mostrarSeccion();\r\n    tabs();\r\n    botonesPaginador();\r\n    paginaSiguiente();\r\n    paginaAnterior();\r\n    \r\n    consultarAPI();\r\n    \r\n    idCliente();\r\n    nombreCliente();\r\n    seleccionarFecha();\r\n    seleccionarHora();\r\n}\r\n\r\nasync function consultarAPI() {\r\n    try {\r\n        const url = '/api/servicios';\r\n        const respuesta = await fetch(url);\r\n        const resultado = await respuesta.json();\r\n        \r\n        if(!resultado.error) {\r\n            mostrarServicios(resultado);\r\n        } else {\r\n            console.error(resultado.error);\r\n            mostrarAlerta('Error al cargar los servicios', 'error');\r\n        }\r\n        \r\n    } catch (error) {\r\n        console.error(error);\r\n        mostrarAlerta('Error al cargar los servicios', 'error');\r\n    }\r\n}\r\n\r\nfunction mostrarServicios(servicios) {\r\n    const contenedorServicios = document.querySelector('#servicios');\r\n    \r\n    if(!contenedorServicios) {\r\n        console.error('El contenedor de servicios no existe');\r\n        return;\r\n    }\r\n    \r\n    // Limpiar el HTML previo\r\n    contenedorServicios.innerHTML = '';\r\n    \r\n    servicios.forEach(servicio => {\r\n        const { id, nombre_servicio, precio, tiempo_estimado } = servicio;\r\n        const precioFormateado = parseInt(precio).toLocaleString('es-CL');\r\n        const tiempoFormateado = formatearTiempo(parseInt(tiempo_estimado));\r\n\r\n        const servicioDiv = document.createElement('DIV');\r\n        servicioDiv.classList.add('servicio');\r\n        servicioDiv.dataset.idServicio = id;\r\n\r\n        // Verificar si el servicio está en la cita guardada\r\n        const estaSeleccionado = cita.servicios.some(servicioGuardado => servicioGuardado.id === id);\r\n        if (estaSeleccionado) {\r\n            servicioDiv.classList.add('seleccionado');\r\n        }\r\n\r\n        servicioDiv.innerHTML = `\r\n            <p class=\"nombre-servicio\">${nombre_servicio}</p>\r\n            <p class=\"precio-servicio\">$${precioFormateado}</p>\r\n            <p class=\"tiempo-servicio text-sm text-gray-600\">Duración: ${tiempoFormateado}</p>\r\n        `;\r\n\r\n        servicioDiv.onclick = () => seleccionarServicio(servicio);\r\n\r\n        contenedorServicios.appendChild(servicioDiv);\r\n    });\r\n}\r\n\r\nfunction paginaSiguiente() {\r\n    const btnSiguiente = document.querySelector('#siguiente');\r\n    \r\n    if(!btnSiguiente) return;\r\n    \r\n    btnSiguiente.addEventListener('click', () => {\r\n        if(paso >= pasoFinal) return;\r\n        \r\n        if(paso === 1) {\r\n            // Validar que se haya seleccionado al menos un servicio\r\n            if(!validarServicios()) return;\r\n        }\r\n        \r\n        if(paso === 2) {\r\n            // Validar que se haya seleccionado fecha y hora\r\n            if(!validarFecha()) return;\r\n        }\r\n        \r\n        paso++;\r\n        mostrarSeccion();\r\n        botonesPaginador();\r\n        \r\n        // Actualizar el resumen al cambiar de página\r\n        mostrarResumen();\r\n    });\r\n}\r\n\r\nfunction paginaAnterior() {\r\n    const btnAnterior = document.querySelector('#anterior');\r\n    \r\n    if(!btnAnterior) return;\r\n    \r\n    btnAnterior.addEventListener('click', () => {\r\n        if(paso <= pasoInicial) return;\r\n        \r\n        paso--;\r\n        mostrarSeccion();\r\n        botonesPaginador();\r\n    });\r\n}\r\n\r\nfunction botonesPaginador() {\r\n    const btnAnterior = document.querySelector('#anterior');\r\n    const btnSiguiente = document.querySelector('#siguiente');\r\n    \r\n    if(!btnAnterior || !btnSiguiente) return;\r\n\r\n    if(paso === 1) {\r\n        // Ocultar el botón anterior en el paso 1\r\n        btnAnterior.classList.add('hidden');\r\n    } else {\r\n        btnAnterior.classList.remove('hidden');\r\n        btnAnterior.classList.remove('opacity-50');\r\n        btnAnterior.disabled = false;\r\n    }\r\n\r\n    if(paso === 4) {\r\n        // Ocultar el botón siguiente en el paso 4\r\n        btnSiguiente.classList.add('hidden');\r\n    } else {\r\n        btnSiguiente.classList.remove('hidden');\r\n        btnSiguiente.classList.remove('opacity-50');\r\n        btnSiguiente.disabled = false;\r\n        btnSiguiente.textContent = 'Siguiente »';\r\n    }\r\n}\r\n\r\nfunction mostrarSeccion() {\r\n    // Ocultar la sección que tenga la clase de mostrar\r\n    const seccionAnterior = document.querySelector('.seccion:not(.hidden)');\r\n    if(seccionAnterior) {\r\n        seccionAnterior.classList.add('hidden');\r\n    }\r\n    \r\n    // Seleccionar la sección con el paso\r\n    const pasoSelector = `#paso-${paso}`;\r\n    const seccion = document.querySelector(pasoSelector);\r\n    if(seccion) {\r\n        seccion.classList.remove('hidden');\r\n    }\r\n    \r\n    // Quita la clase \"actual\" al tab anterior\r\n    const tabAnterior = document.querySelector('.step-button.bg-blue-500');\r\n    if(tabAnterior) {\r\n        tabAnterior.classList.remove('bg-blue-500', 'text-white');\r\n        tabAnterior.classList.add('bg-gray-300', 'text-gray-600');\r\n    }\r\n    \r\n    // Resalta el tab actual\r\n    const tab = document.querySelector(`[data-paso=\"${paso}\"]`);\r\n    if(tab) {\r\n        tab.classList.remove('bg-gray-300', 'text-gray-600');\r\n        tab.classList.add('bg-blue-500', 'text-white');\r\n    }\r\n    \r\n    // Actualizar la barra de progreso\r\n    const progreso = document.querySelector('#progress');\r\n    if(progreso) {\r\n        progreso.style.width = `${(paso / pasoFinal) * 100}%`;\r\n    }\r\n    \r\n    localStorage.setItem('paso', paso);\r\n}\r\n\r\nfunction mostrarAlerta(mensaje, tipo) {\r\n    if(typeof Swal === 'undefined') {\r\n        console.error('SweetAlert2 no está cargado');\r\n        alert(mensaje);\r\n        return;\r\n    }\r\n\r\n    Swal.fire({\r\n        icon: tipo,\r\n        title: tipo === 'error' ? 'Error' : 'Éxito',\r\n        text: mensaje\r\n    });\r\n}\r\n\r\nfunction tabs() {\r\n    const botones = document.querySelectorAll('.step-button');\r\n    botones.forEach(boton => {\r\n        boton.addEventListener('click', function(e) {\r\n            const pasoSeleccionado = parseInt(e.target.dataset.paso);\r\n            \r\n            // Si intenta retroceder, permitirlo\r\n            if (pasoSeleccionado < paso) {\r\n                paso = pasoSeleccionado;\r\n                mostrarSeccion();\r\n                botonesPaginador();\r\n                return;\r\n            }\r\n\r\n            // Validaciones para avanzar\r\n            if (paso === 1 && !validarServicios()) {\r\n                return;\r\n            }\r\n\r\n            if (paso === 2 && !validarFecha()) {\r\n                return;\r\n            }\r\n\r\n            // Si todas las validaciones pasan, permitir el cambio\r\n            if (pasoSeleccionado - paso === 1) {\r\n                paso = pasoSeleccionado;\r\n                mostrarSeccion();\r\n                botonesPaginador();\r\n            } else {\r\n                // Si intenta saltar más de una sección, mostrar alerta\r\n                mostrarAlerta('Por favor, complete los pasos en orden', 'error');\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction actualizarBotonConfirmar() {\r\n    const metodoPagoSeleccionado = document.querySelector('input[name=\"payment-method\"]:checked');\r\n    const botonConfirmar = document.getElementById('confirmar-pago');\r\n    \r\n    botonConfirmar.disabled = !metodoPagoSeleccionado;\r\n\r\n    // Actualizar visual de las opciones seleccionadas\r\n    document.querySelectorAll('.payment-option').forEach(option => {\r\n        const check = option.querySelector('.payment-check');\r\n        if (option.querySelector('input').checked) {\r\n            check.classList.add('opacity-100');\r\n            option.querySelector('label').classList.add('border-blue-500');\r\n        } else {\r\n            check.classList.remove('opacity-100');\r\n            option.querySelector('label').classList.remove('border-blue-500');\r\n        }\r\n    });\r\n\r\n    // Agregar el evento click al botón de confirmar\r\n    botonConfirmar.onclick = async () => {\r\n        // Deshabilitar el botón inmediatamente\r\n        botonConfirmar.disabled = true;\r\n        botonConfirmar.textContent = 'Procesando...';\r\n        \r\n        // Deshabilitar las opciones de pago\r\n        document.querySelectorAll('input[name=\"payment-method\"]').forEach(input => {\r\n            input.disabled = true;\r\n        });\r\n\r\n        const metodoPago = document.querySelector('input[name=\"payment-method\"]:checked').value;\r\n        \r\n        if (metodoPago === 'local') {\r\n            try {\r\n                // Mostrar modal de confirmación con SweetAlert2\r\n                const resultado = await Swal.fire({\r\n                    title: '¿Confirmar cita?',\r\n                    html: `\r\n                        <p class=\"mb-4\">Has seleccionado pago en establecimiento.</p>\r\n                        <p class=\"text-sm text-gray-600\">\r\n                            Recuerda que deberás realizar el pago al momento de llegar a tu cita.\r\n                        </p>\r\n                    `,\r\n                    icon: 'question',\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: '#3085d6',\r\n                    cancelButtonColor: '#d33',\r\n                    confirmButtonText: 'Sí, agendar',\r\n                    cancelButtonText: 'Cancelar',\r\n                    allowOutsideClick: false,\r\n                    allowEscapeKey: false\r\n                });\r\n\r\n                if (resultado.isConfirmed) {\r\n                    // Preparar los datos para enviar\r\n                    const datos = new FormData();\r\n                    datos.append('fecha', cita.fecha);\r\n                    datos.append('hora', cita.hora);\r\n                    datos.append('usuarioId', cita.id);\r\n                    datos.append('servicios', cita.servicios.map(servicio => servicio.id));\r\n                    datos.append('pago', metodoPago);\r\n                    datos.append('estado', 'pendiente');\r\n\r\n                    // Realizar la petición para guardar la cita\r\n                    const url = '/api/citas';\r\n                    const respuesta = await fetch(url, {\r\n                        method: 'POST',\r\n                        body: datos\r\n                    });\r\n                    const resultado = await respuesta.json();\r\n\r\n                    if(resultado.resultado) {\r\n                        // Limpiar el LocalStorage inmediatamente\r\n                        localStorage.removeItem('cita');\r\n                        localStorage.removeItem('paso');\r\n\r\n                        Swal.fire({\r\n                            icon: 'success',\r\n                            title: '¡Cita Confirmada!',\r\n                            text: 'Tu cita ha sido agendada correctamente',\r\n                            confirmButtonText: 'OK',\r\n                            allowOutsideClick: false,\r\n                            allowEscapeKey: false\r\n                        }).then(() => {\r\n                            window.location.href = '/';\r\n                        });\r\n                    }\r\n                } else {\r\n                    // Si el usuario cancela, reactivar el botón y las opciones\r\n                    botonConfirmar.disabled = false;\r\n                    botonConfirmar.textContent = 'Confirmar Cita';\r\n                    document.querySelectorAll('input[name=\"payment-method\"]').forEach(input => {\r\n                        input.disabled = false;\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                console.error(error);\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    text: 'Hubo un error al guardar la cita',\r\n                    confirmButtonText: 'OK',\r\n                    allowOutsideClick: false,\r\n                    allowEscapeKey: false\r\n                }).then(() => {\r\n                    // Reactivar el botón y las opciones en caso de error\r\n                    botonConfirmar.disabled = false;\r\n                    botonConfirmar.textContent = 'Confirmar Cita';\r\n                    document.querySelectorAll('input[name=\"payment-method\"]').forEach(input => {\r\n                        input.disabled = false;\r\n                    });\r\n                });\r\n            }\r\n        } else if (metodoPago === 'paypal') {\r\n            // Lógica para PayPal\r\n            document.querySelector('#paypal-button-container').classList.remove('hidden');\r\n        }\r\n    };\r\n}\r\n\r\nfunction validarServicios() {\r\n    if(cita.servicios.length === 0) {\r\n        mostrarAlerta('Debes seleccionar al menos un servicio', 'error');\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction validarFecha() {\r\n    const fecha = document.querySelector('#fecha').value;\r\n    \r\n    if(fecha === '' || !cita.hora) {\r\n        mostrarAlerta('Debes seleccionar fecha y hora', 'error');\r\n        return false;\r\n    }\r\n    \r\n    return true;\r\n}\r\n\r\nfunction validarResumen() {\r\n    const elementos = Object.values(cita);\r\n    if(elementos.includes('')) {\r\n        mostrarAlerta('Faltan datos por confirmar', 'error');\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction seleccionarServicio(servicio) {\r\n    const { id } = servicio;\r\n    const { servicios } = cita;\r\n\r\n    // Identificar el elemento clickeado\r\n    const divServicio = document.querySelector(`[data-id-servicio=\"${id}\"]`);\r\n\r\n    // Comprobar si un servicio ya fue agregado o quitarlo\r\n    if(servicios.some(agregado => agregado.id === id)) {\r\n        // Eliminarlo\r\n        cita.servicios = servicios.filter(agregado => agregado.id !== id);\r\n        divServicio.classList.remove('seleccionado');\r\n    } else {\r\n        // Agregarlo\r\n        cita.servicios = [...servicios, servicio];\r\n        divServicio.classList.add('seleccionado');\r\n    }\r\n    \r\n    localStorage.setItem('cita', JSON.stringify(cita));\r\n    mostrarResumen();\r\n}\r\n\r\n// También necesitamos implementar las funciones de cliente\r\nfunction idCliente() {\r\n    // Verificar si el elemento existe antes de acceder a su valor\r\n    const inputId = document.querySelector('#id');\r\n    if(inputId) {\r\n        cita.id = inputId.value;\r\n    }\r\n}\r\n\r\nfunction nombreCliente() {\r\n    // Verificar si el elemento existe antes de acceder a su valor\r\n    const inputNombre = document.querySelector('#nombre');\r\n    if(inputNombre) {\r\n        cita.nombre = inputNombre.value;\r\n    }\r\n}\r\n\r\nfunction seleccionarFecha() {\r\n    const inputFecha = document.querySelector('#fecha');\r\n    const horasDisponibles = document.querySelector('#horas-disponibles');\r\n    \r\n    if(!inputFecha || !horasDisponibles) return;\r\n    \r\n    // Establecer la fecha mínima como hoy\r\n    const hoy = new Date();\r\n    const año = hoy.getFullYear();\r\n    const mes = (hoy.getMonth() + 1).toString().padStart(2, '0');\r\n    const dia = hoy.getDate().toString().padStart(2, '0');\r\n    const fechaMinima = `${año}-${mes}-${dia}`;\r\n    \r\n    inputFecha.min = fechaMinima;\r\n    \r\n    // Si hay una fecha guardada, establecerla\r\n    if(cita.fecha) {\r\n        inputFecha.value = cita.fecha;\r\n        mostrarHorasDisponibles();\r\n    }\r\n    \r\n    inputFecha.addEventListener('input', function(e) {\r\n        const [añoSel, mesSel, diaSel] = e.target.value.split('-');\r\n        const fechaSeleccionada = new Date(añoSel, mesSel - 1, diaSel);\r\n        const fechaHoy = new Date(año, mes - 1, dia);\r\n        \r\n        if(fechaSeleccionada < fechaHoy) {\r\n            e.target.value = '';\r\n            mostrarAlerta('No puedes seleccionar fechas pasadas', 'error');\r\n            horasDisponibles.classList.add('hidden');\r\n            cita.fecha = '';\r\n            cita.hora = '';\r\n        } else {\r\n            const dia = fechaSeleccionada.getDay();\r\n            \r\n            if([6, 0].includes(dia)) {\r\n                e.target.value = '';\r\n                mostrarAlerta('Fines de semana no permitidos', 'error');\r\n                horasDisponibles.classList.add('hidden');\r\n                cita.fecha = '';\r\n                cita.hora = '';\r\n            } else {\r\n                cita.fecha = e.target.value;\r\n                mostrarHorasDisponibles();\r\n            }\r\n        }\r\n        mostrarResumen();\r\n        localStorage.setItem('cita', JSON.stringify(cita));\r\n    });\r\n}\r\n\r\nfunction mostrarHorasDisponibles() {\r\n    const horasDisponibles = document.querySelector('#horas-disponibles');\r\n    \r\n    if(!horasDisponibles) {\r\n        console.error('No se encontró el contenedor de horas disponibles');\r\n        return;\r\n    }\r\n    \r\n    horasDisponibles.classList.remove('hidden');\r\n\r\n    // Definir las horas disponibles por período\r\n    const horas = {\r\n        mañana: ['10:00', '10:50', '11:40'],\r\n        tarde: ['12:30', '15:00', '15:50', '16:40', '17:30'],\r\n        noche: ['18:20', '19:10']\r\n    };\r\n\r\n    // Limpiar contenedores\r\n    ['mañana', 'tarde', 'noche'].forEach(periodo => {\r\n        const contenedor = document.querySelector(`#horas-${periodo}`);\r\n        if(!contenedor) {\r\n            console.error(`No se encontró el contenedor para ${periodo}`);\r\n            return;\r\n        }\r\n        \r\n        contenedor.innerHTML = '';\r\n        \r\n        horas[periodo].forEach(hora => {\r\n            const boton = document.createElement('BUTTON');\r\n            boton.type = 'button';\r\n            boton.classList.add('px-4', 'py-2', 'text-sm', 'border', 'rounded', 'hover:bg-blue-500', 'hover:text-white');\r\n            \r\n            if(cita.hora === hora) {\r\n                boton.classList.add('bg-blue-500', 'text-white');\r\n            }\r\n            \r\n            boton.textContent = hora;\r\n            \r\n            boton.onclick = function() {\r\n                document.querySelectorAll('button[type=\"button\"]').forEach(btn => {\r\n                    btn.classList.remove('bg-blue-500', 'text-white');\r\n                });\r\n                \r\n                this.classList.add('bg-blue-500', 'text-white');\r\n                cita.hora = hora;\r\n                \r\n                localStorage.setItem('cita', JSON.stringify(cita));\r\n                mostrarResumen();\r\n            };\r\n            \r\n            contenedor.appendChild(boton);\r\n        });\r\n    });\r\n}\r\n\r\nfunction seleccionarHora() {\r\n    const inputHora = document.querySelector('#hora');\r\n    inputHora.addEventListener('input', function(e) {\r\n        const horaCita = e.target.value;\r\n        const hora = horaCita.split(\":\")[0];\r\n        if(hora < 10 || hora > 18) {\r\n            e.target.value = '';\r\n            mostrarAlerta('Hora no válida', 'error');\r\n        } else {\r\n            cita.hora = e.target.value;\r\n        }\r\n    });\r\n}\r\n\r\nfunction formatearTiempo(minutos) {\r\n    const horas = Math.floor(minutos / 60);\r\n    const minutosRestantes = minutos % 60;\r\n    \r\n    let resultado = '';\r\n    \r\n    if (horas > 0) {\r\n        resultado += `${horas} ${horas === 1 ? 'hora' : 'horas'}`;\r\n    }\r\n    \r\n    if (minutosRestantes > 0) {\r\n        if (horas > 0) resultado += ' y ';\r\n        resultado += `${minutosRestantes} ${minutosRestantes === 1 ? 'minuto' : 'minutos'}`;\r\n    }\r\n    \r\n    return resultado || '0 minutos';\r\n}\r\n\r\nfunction mostrarResumen() {\r\n    const resumen = document.querySelector('#resumen-cita');\r\n\r\n    if(!resumen) return;\r\n\r\n    // Limpiar el contenido\r\n    while(resumen.firstChild) {\r\n        resumen.removeChild(resumen.firstChild);\r\n    }\r\n\r\n    // Verificar si hay servicios seleccionados y datos completos\r\n    if(Object.values(cita).includes('') || cita.servicios.length === 0) {\r\n        const mensajeError = document.createElement('P');\r\n        mensajeError.classList.add('text-center', 'text-gray-600', 'mt-5');\r\n        mensajeError.textContent = 'Faltan datos por completar';\r\n        resumen.appendChild(mensajeError);\r\n        return;\r\n    }\r\n\r\n    const { nombre, fecha, hora, servicios } = cita;\r\n\r\n    // Contenedor principal\r\n    const contenedorResumen = document.createElement('DIV');\r\n    contenedorResumen.classList.add('p-6', 'space-y-6');\r\n\r\n    // Nombre del cliente\r\n    const nombreCliente = document.createElement('P');\r\n    nombreCliente.innerHTML = `<span class=\"font-bold\">Nombre:</span> ${nombre}`;\r\n    nombreCliente.classList.add('text-lg');\r\n\r\n    // Contenedor de servicios\r\n    const contenedorServicios = document.createElement('DIV');\r\n    contenedorServicios.classList.add('space-y-3');\r\n\r\n    // Título de servicios\r\n    const tituloServicios = document.createElement('H3');\r\n    tituloServicios.textContent = 'Servicios Seleccionados:';\r\n    tituloServicios.classList.add('font-bold', 'text-lg', 'mb-3');\r\n    contenedorServicios.appendChild(tituloServicios);\r\n\r\n    // Variables para calcular totales\r\n    let tiempoTotal = 0;\r\n    let precioTotal = 0;\r\n\r\n    // Iterando y mostrando los servicios\r\n    servicios.forEach(servicio => {\r\n        const { nombre_servicio, precio, tiempo_estimado } = servicio;\r\n        const servicioParrafo = document.createElement('P');\r\n        \r\n        // Sumar al tiempo total\r\n        tiempoTotal += parseInt(tiempo_estimado);\r\n        // Sumar al precio total\r\n        precioTotal += parseFloat(precio);\r\n        \r\n        // Formatear el precio en formato CLP\r\n        const precioFormateado = new Intl.NumberFormat('es-CL', {\r\n            style: 'currency',\r\n            currency: 'CLP'\r\n        }).format(precio);\r\n        \r\n        // Formatear el tiempo estimado\r\n        const tiempoFormateado = formatearTiempo(parseInt(tiempo_estimado));\r\n        \r\n        servicioParrafo.textContent = `${nombre_servicio} - ${precioFormateado} (${tiempoFormateado})`;\r\n        contenedorServicios.appendChild(servicioParrafo);\r\n    });\r\n\r\n    // Agregar tiempo total estimado con formato\r\n    const tiempoTotalParrafo = document.createElement('P');\r\n    const tiempoTotalFormateado = formatearTiempo(tiempoTotal);\r\n    tiempoTotalParrafo.innerHTML = `<span class=\"font-bold\">Tiempo Total Estimado:</span> ${tiempoTotalFormateado}`;\r\n    tiempoTotalParrafo.classList.add('bg-blue-50', 'rounded-lg', 'text-lg', 'mt-4');\r\n\r\n    // Modificar la parte de formateo de fecha\r\n    const [año, mes, dia] = fecha.split('-');\r\n    \r\n    // Crear la fecha sin UTC\r\n    const fechaObj = new Date(año, mes - 1, dia);\r\n    \r\n    const opciones = { \r\n        weekday: 'long', \r\n        year: 'numeric', \r\n        month: 'long', \r\n        day: 'numeric'\r\n    };\r\n    \r\n    const fechaFormateada = fechaObj.toLocaleDateString('es-CL', opciones);\r\n    const fechaCapitalizada = fechaFormateada.charAt(0).toUpperCase() + fechaFormateada.slice(1);\r\n\r\n    const fechaCita = document.createElement('P');\r\n    fechaCita.innerHTML = `<span class=\"font-bold\">Fecha:</span> ${fechaCapitalizada}`;\r\n    fechaCita.classList.add('text-lg');\r\n\r\n    const horaCita = document.createElement('P');\r\n    horaCita.innerHTML = `<span class=\"font-bold\">Hora:</span> ${hora} hrs`;\r\n    horaCita.classList.add('text-lg');\r\n\r\n    // Calcular y mostrar el total\r\n    const totalFormateado = new Intl.NumberFormat('es-CL', {\r\n        style: 'currency',\r\n        currency: 'CLP'\r\n    }).format(precioTotal);\r\n    \r\n    const totalParrafo = document.createElement('P');\r\n    totalParrafo.innerHTML = `<span class=\"font-bold\">Total a Pagar:</span> ${totalFormateado}`;\r\n    totalParrafo.classList.add('bg-gray-100', 'p-4', 'rounded-lg', 'text-lg', 'mt-6', 'text-center');\r\n\r\n    // Agregar al contenedor principal\r\n    contenedorResumen.appendChild(nombreCliente);\r\n    contenedorResumen.appendChild(contenedorServicios);\r\n    contenedorResumen.appendChild(tiempoTotalParrafo);\r\n    contenedorResumen.appendChild(fechaCita);\r\n    contenedorResumen.appendChild(horaCita);\r\n    contenedorResumen.appendChild(totalParrafo);\r\n\r\n    // Agregar al resumen\r\n    resumen.appendChild(contenedorResumen);\r\n\r\n    // Habilitar el botón de confirmar si estamos en el paso 3\r\n    if(paso === 3) {\r\n        const btnSiguiente = document.querySelector('#siguiente');\r\n        if(btnSiguiente) {\r\n            btnSiguiente.classList.remove('opacity-50');\r\n            btnSiguiente.disabled = false;\r\n        }\r\n    }\r\n}\r\n\r\n// ... Resto de las funciones existentes ..."]}